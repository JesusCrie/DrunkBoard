{"version":3,"sources":["webpack:///./src/theme.scss","webpack:///./node_modules/@angular/material/_theming.scss","webpack:///$stdin","webpack:///./src/styles.scss","webpack:///./node_modules/flag-icon-css/sass/_flag-icon-base.scss"],"names":[],"mappings":"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qF+C,CDrF/C,2BCqFoF,CDrFpF,6BAy4IE,kBAz4IF,wCCuF+C,CDvF/C,2BCuFoF,CDvFpF,6BAy4IE,kBAz4IF,wCCyF+C,CDzF/C,4BCyFqF,CDzFrF,6BAy4IE,kBAz4IF,wCC2F+C,CD3F/C,8BC2FqF,CD3FrF,+BAy4IE,kBAz4IF,wCC6F+C,CD7F/C,8BC6FqF,CD7FrF,+BAy4IE,kBAz4IF,wCC+F+C,CD/F/C,8BC+FqF,CD/FrF,+BAy4IE,mBAz4IF,wCCiG+C,CDjG/C,+BCiGsF,CDjGtF,+BAy4IE,mBAz4IF,wCCmG+C,CDnG/C,+BCmGsF,CDnGtF,+BAy4IE,mBAz4IF,wCCqG+C,CDrG/C,+BCqGsF,CDrGtF,+BAy4IE,mBAz4IF,wCCuG+C,CDvG/C,+BCuGsF,CDvGtF,+BAy4IE,mBAz4IF,wCCyG+C,CDzG/C,+BCyGsF,CDzGtF,+BAy4IE,mBAz4IF,wCC2G+C,CD3G/C,+BC2GsF,CD3GtF,+BAy4IE,mBAz4IF,yCC6GgD,CD7GhD,+BC6GuF,CD7GvF,+BAy4IE,mBAz4IF,yCC+GgD,CD/GhD,+BC+GuF,CD/GvF,+BAy4IE,mBAz4IF,yCCiHgD,CDjHhD,+BCiHuF,CDjHvF,+BAy4IE,mBAz4IF,yCCmHgD,CDnHhD,+BCmHuF,CDnHvF,+BAy4IE,mBAz4IF,0CCqHiD,CDrHjD,+BCqHwF,CDrHxF,+BAy4IE,mBAz4IF,0CCuHiD,CDvHjD,+BCuHwF,CDvHxF,+BAy4IE,mBAz4IF,0CCyHiD,CDzHjD,+BCyHwF,CDzHxF,+BAy4IE,mBAz4IF,0CC2HiD,CD3HjD,+BC2HwF,CD3HxF,+BAy4IE,mBAz4IF,0CC6HiD,CD7HjD,+BC6HwF,CD7HxF,+BAi5IA,oBAIE,yBACA,sBA9mGF,wBAEE,gBACA,sBAxxCF,sDAnBA,wCCuIiD,CDvIjD,2BCuIsF,CDvItF,6BAwyCA,8EAWI,gBAXJ,wGAcM,sBAnkDN,kCA4qDA,mBAKI,kBACA,gBA4dJ,uBAmBI,YA3eJ,qCAEI,mBACA,sBAIJ,mCAEI,WACA,mBAIJ,WACE,kBAGF,qCAEI,aAIJ,uCAYM,mBAMF,sBAIJ,mBAvDE,WACA,mBAuDA,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2lC+C,CD3lC/C,2BC2lCoF,CD3lCpF,4BD9QF,mCC8QE,wCC6lC+C,CD7lC/C,2BC6lCoF,CD7lCpF,4BD9QF,mCC8QE,wCC+lC+C,CD/lC/C,2BC+lCoF,CD/lCpF,4BD9QF,mCC8QE,wCCimC+C,CDjmC/C,2BCimCoF,CDjmCpF,6BD9QF,mCC8QE,wCCmmC+C,CDnmC/C,2BCmmCoF,CDnmCpF,6BD9QF,mCC8QE,wCCqmC+C,CDrmC/C,4BCqmCqF,CDrmCrF,6BD9QF,mCC8QE,wCCumC+C,CDvmC/C,8BCumCqF,CDvmCrF,+BD9QF,mCC8QE,wCCymC+C,CDzmC/C,8BCymCqF,CDzmCrF,+BD9QF,mCC8QE,wCC2mC+C,CD3mC/C,8BC2mCqF,CD3mCrF,+BD9QF,oCC8QE,wCC6mC+C,CD7mC/C,+BC6mCsF,CD7mCtF,+BD9QF,oCC8QE,wCC+mC+C,CD/mC/C,+BC+mCsF,CD/mCtF,+BD9QF,oCC8QE,wCCinC+C,CDjnC/C,+BCinCsF,CDjnCtF,+BD9QF,oCC8QE,wCCmnC+C,CDnnC/C,+BCmnCsF,CDnnCtF,+BD9QF,oCC8QE,wCCqnC+C,CDrnC/C,+BCqnCsF,CDrnCtF,+BD9QF,oCC8QE,wCCunC+C,CDvnC/C,+BCunCsF,CDvnCtF,+BD9QF,oCC8QE,yCCynCgD,CDznChD,+BCynCuF,CDznCvF,+BD9QF,oCC8QE,yCC2nCgD,CD3nChD,+BC2nCuF,CD3nCvF,+BD9QF,oCC8QE,yCC6nCgD,CD7nChD,+BC6nCuF,CD7nCvF,+BD9QF,oCC8QE,yCC+nCgD,CD/nChD,+BC+nCuF,CD/nCvF,+BD9QF,oCC8QE,0CCioCiD,CDjoCjD,+BCioCwF,CDjoCxF,+BD9QF,oCC8QE,0CCmoCiD,CDnoCjD,+BCmoCwF,CDnoCxF,+BD9QF,oCC8QE,0CCqoCiD,CDroCjD,+BCqoCwF,CDroCxF,+BD9QF,oCC8QE,0CCuoCiD,CDvoCjD,+BCuoCwF,CDvoCxF,+BD9QF,oCC8QE,0CCyoCiD,CDzoCjD,+BCyoCwF,CDzoCxF,+BD9QF,yECmqJI,yBACA,WAKA,yBACE,aD1qJN,yCCwjDI,mBACA,WDzjDJ,uEC8QE,wCCmpCiD,CDnpCjD,2BCmpCsF,CDnpCtF,6BD9QF,+FCikDM,mBDjkDN,yHCokDQ,WDpkDR,sDCyrDM,mBACA,sBD1rDN,oDCgsDM,WACA,mBDjsDN,4BCssDI,kBDtsDJ,sDC2sDM,aD3sDN,wDC2tDQ,mBAMF,2BDjuDN,oCC8qDI,WACA,mBAuDA,kBACA,kBACA,qBACA,kBACA,sHCzSqC,CDySrC,kCACA,gDACA,gBACA,mBACA,uBACA,oBD/uDJ,qDCsvDI,sCDtvDJ,qDC8lDI,WACA,YACA,iBDhmDJ,qECqmDM,SDrmDN,qEC2mDM,YD3mDN,sECinDM,WDoTN,gFC9SM,UACA,YDxnDN,qEC8nDM,YD8SN,+ECxSM,WACA,WDroDN,wFC4oDQ,UDuSR,kGCjSQ,UACA,WDnpDR,uFCypDQ,WDiSR,iGC3RQ,WACA,UDhqDR,sDC8lDI,WACA,YACA,iBDhmDJ,sECqmDM,UDrmDN,sEC2mDM,aD3mDN,uECinDM,WD2VN,iFCrVM,UACA,YDxnDN,sEC8nDM,YDqVN,gFC/UM,WACA,WDroDN,yFC4oDQ,WD8UR,mGCxUQ,UACA,YDnpDR,wFCypDQ,YDwUR,kGClUQ,WACA,WDhqDR,qDC8lDI,WACA,YACA,iBDhmDJ,qECqmDM,UDrmDN,qEC2mDM,aD3mDN,sECinDM,WDkYN,gFC5XM,UACA,YDxnDN,qEC8nDM,YD4XN,+ECtXM,WACA,WDroDN,wFC4oDQ,WDqXR,kGC/WQ,UACA,YDnpDR,uFCypDQ,YD+WR,iGCzWQ,WACA,WDhqDR,6CC8QE,yCCkxCgD,CDlxChD,+BCkxCuF,CDlxCvF,+BAghDE,mBACA,WD/xDJ,oGC83DI,cACA,eD/3DJ,wICi2DI,cDj2DJ,qICo2DI,cDp2DJ,+HCu2DI,cDv2DJ,soBC62DM,2BD72DN,sNCszDI,yBDtzDJ,mNC0zDI,yBD1zDJ,6MC8zDI,yBD9zDJ,gNCk0DI,6BDl0DJ,gKCw4DM,WACA,8BDz4DN,2CC84DI,gBD94DJ,qDCo5DI,mCDp5DJ,+HCy5DI,WACA,yBD15DJ,+KCi2DI,oCDj2DJ,2KCo2DI,+CDp2DJ,mKCu2DI,oCDv2DJ,o0BC62DM,kED72DN,+PC40DI,sCD50DJ,2PCg1DI,gCDh1DJ,mPCo1DI,sCDp1DJ,mIC8QE,iCCy0C8C,CDz0C9C,uBCy0CmF,CDz0CnF,wBD9QF,kEC8QE,wCC20C+C,CD30C/C,2BC20CoF,CD30CpF,4BD9QF,yFC8QE,wCC60C+C,CD70C/C,8BC60CqF,CD70CrF,+BD9QF,4EC8QE,iCC+0C8C,CD/0C9C,uBC+0CmF,CD/0CnF,wBD9QF,qHC8QE,wCCi1C+C,CDj1C/C,4BCi1CqF,CDj1CrF,6BD9QF,mKC8QE,wCCm1C+C,CDn1C/C,+BCm1CsF,CDn1CtF,+BD9QF,yIC8QE,iCCq1C8C,CDr1C9C,uBCq1CmF,CDr1CnF,wBD9QF,yFC8QE,wCCw1C+C,CDx1C/C,2BCw1CoF,CDx1CpF,4BD9QF,mJC09DI,gBA6DA,uCDvhEJ,oCC89DI,2BD99DJ,qECi+DM,uCDj+DN,wDCs+DI,WACA,mBDv+DJ,yFC0+DM,sBD1+DN,oGC++DI,4CD/+DJ,8GCm/DI,iBACA,6CDp/DJ,+HCy/DM,iBACA,kBACA,2CD3/DN,4CCggEI,yBACA,2BDjgEJ,kFCogEM,WDpgEN,6CCygEI,2BACA,yBD1gEJ,mFC6gEM,mBD7gEN,uECihEM,yBDjhEN,2BC6iEI,mBACA,WD9iEJ,yDC8QE,wCCi4CiD,CDj4CjD,2BCi4CsF,CDj4CtF,4BD9QF,uEC8QE,iCCm4CgD,CDn4ChD,uBCm4CqF,CDn4CrF,wBD9QF,oCCujEI,2BDvjEJ,qCC0mEI,kCD1mEJ,yCC8mEI,aD9mEJ,8CConEI,yBAnnEF,0CAgnEA,6BDjnEF,8CCynEM,uBDznEN,yCC8nEI,yBD9nEJ,8JCmoEM,yBDnoEN,4JCuoEM,yBDvoEN,wJC2oEM,yBD3oEN,kLCmpEQ,yBDnpER,uFCypEQ,qBDzpER,4DC8pEM,2BA7pEJ,kCDDF,wCCkqEM,WDlqEN,0CC2qEM,gBD3qEN,gHCirEM,yBDjrEN,+GCqrEM,yBDrrEN,6GCyrEM,yBDzrEN,6CCitEE,yBACA,WDltEF,8DCqtEI,WACA,WDttEJ,4EC8QE,wCCg7CiD,CDh7CjD,2BCg7CsF,CDh7CtF,4BD9QF,4FCsvEQ,YDtvER,+DC2vEM,WD3vEN,oDC+vEM,gBD/vEN,2ECitEE,yBACA,WDltEF,4FCqtEI,WACA,WDttEJ,+FC8tEI,gCD9tEJ,wECitEE,yBACA,WDltEF,yFCqtEI,WACA,WDttEJ,4FC8tEI,gCD9tEJ,0ECitEE,yBACA,sBDltEF,2FCqtEI,sBACA,WDttEJ,8FC8tEI,0BD9tEJ,4BCuyEI,mBDvyEJ,iUC8yEI,mBD9yEJ,8LCmzEI,0CDnzEJ,kCCuzEI,2BDvzEJ,6DC2zEI,WD3zEJ,qCCw3EI,sBDx3EJ,kLCg4EI,WDh4EJ,4CCo4EI,2BDp4EJ,2DCw4EI,iCDx4EJ,0CC44EI,2BD54EJ,iDCg5EI,WACA,yBDj5EJ,8GCq5EI,2BDr5EJ,oZC45EM,uCD55EN,2ECm6EI,kCDn6EJ,uGC06EM,kCD16EN,6CC41EI,yBACA,WD71EJ,yECo2EM,mCDp2EN,qEC82EI,gCD92EJ,yCC8QE,wCC8/C+C,CD9/C/C,2BC8/CoF,CD9/CpF,6BA2qEE,yBACA,WD17EJ,gFC41EI,yBACA,sBD71EJ,4GCo2EM,oCDp2EN,wGC82EI,2CD92EJ,8EC41EI,yBACA,WD71EJ,0GCo2EM,kCDp2EN,sGC82EI,gCD92EJ,+CC8QE,iCCghD8C,CDhhD9C,uBCghDmF,CDhhDnF,wBD9QF,+CC08EI,cD18EJ,0DC68EM,cD78EN,wDCi9EM,cDj9EN,uCC8QE,0CCwhDiD,CDxhDjD,+BCwhDwF,CDxhDxF,+BA6uEE,mBACA,WD5/EJ,8BCksJI,uCDlsJJ,uCCssJI,yCDtsJJ,sCCihFI,mBACA,WDlhFJ,oEC8QE,wCCmiDiD,CDniDjD,2BCmiDsF,CDniDtF,4BD9QF,iCCshFI,uCDthFJ,4XC8hFQ,iCAON,oBDriFF,qHCwiFM,oBDxiFN,mDC6iFI,WD7iFJ,0GCkjFI,2BDljFJ,iECsjFI,2BDtjFJ,4MC0jFM,cD1jFN,kECw2II,2BDx2IJ,mECg3II,cDh3IJ,8ECm3IM,cDn3IN,4ECu3IM,cDv3IN,8DC43II,cD53IJ,wCCg4II,sBDh4IJ,oECq4IM,yBDr4IN,+ECw4IQ,yBDx4IR,6EC44IQ,yBD54IR,8HCm5IM,cDn5IN,yICu5IM,cDv5IN,4ZC25IM,cD35IN,yKC86IM,yBD96IN,4BCm7II,cDn7IJ,sICuhIM,2BDvhIN,6EC+hIM,sCD/hIN,qGCmrFE,yGACA,yBACA,2BDrrFF,+ECu0IM,sCDv0IN,uGCmrFE,yGACA,yBACA,2BDrrFF,sECo7HM,sCDp7HN,8FCw7HM,uCDx7HN,mFC47HM,sCD57HN,+FCi8HQ,2BDj8HR,2GCq8HQ,6BDr8HR,4EC6sIM,2BD7sIN,kFCitIM,WDjtIN,8FCstIQ,cDttIR,yGC0tIQ,cD1tIR,uOC8tIQ,cD9tIR,kGC2uIQ,2BD3uIR,oGC+uIQ,4BD/uIR,uCC4pFM,cD5pFN,sCCgqFM,cDhqFN,oCCoqFM,cDpqFN,qFCqvFI,2BDrvFJ,0JC0vFI,2BD1vFJ,oCC8vFI,oBD9vFJ,2DCiwFM,2BDjwFN,iDCiwFM,2BDjwFN,sDCiwFM,2BDjwFN,+DCiwFM,2BDjwFN,0DCiwFM,2BDjwFN,2CC2wFQ,sBD3wFR,oDC+wFQ,sBD/wFR,gDCqxFI,oBDrxFJ,0GC0xFI,oBD1xFJ,4GC8xFI,cD9xFJ,gGC6zFM,WD7zFN,+CCq0FM,2BDr0FN,yCC00FI,yBD10FJ,sSCi1FM,iCDj1FN,iCCo5FI,mBDp5FJ,+DC8QE,wCC2rDiD,CD3rDjD,2BC2rDsF,CD3rDtF,6BD9QF,gCCw5FI,eACA,WDz5FJ,2FC65FQ,2BD75FR,0GCo6FI,WDp6FJ,2PC46FM,iCD56FN,gCCq8FI,mBDr8FJ,8FC08FI,2BD18FJ,oFC+8FI,0BACA,4BDh9FJ,2ECq9FI,0BDr9FJ,2QC69FM,kCD79FN,8CCs/FI,aDt/FJ,0CC0/FI,yBD1/FJ,+CC8/FI,yBD9/FJ,2ECmgGM,aDngGN,uECugGM,yBDvgGN,4EC2gGM,yBD3gGN,yECihGM,aDjhGN,qECqhGM,yBDrhGN,0ECyhGM,yBDzhGN,mFC4iGM,eD5iGN,yGCgjGM,eDhjGN,qGCojGM,eDpjGN,yCColGI,kCDplGJ,yFCikGI,qBDjkGJ,+WCwkGI,yBDxkGJ,wFCikGI,qBDjkGJ,2WCwkGI,yBDxkGJ,sFCikGI,qBDjkGJ,mWCwkGI,yBDxkGJ,8KC0mGQ,kCD1mGR,0KC+mGQ,sCD/mGR,+ECmnGQ,2BDnnGR,uDC0nGM,sBD1nGN,mCCopGI,WDppGJ,iGCwpGI,2BDxpGJ,mCCgqGI,2BDhqGJ,mCCoqGI,mBDpqGJ,iEC8QE,wCC8xDiD,CD9xDjD,2BC8xDsF,CD9xDtF,6BD9QF,sFCwqGM,iCDxqGN,2EC+qGQ,cD/qGR,0ECmrGQ,cDnrGR,0JCurGQ,cDvrGR,mFCgsGM,2BDhsGN,uCCouGI,yBACA,WDruGJ,6BCyuGI,yBACA,WD1uGJ,6CC6uGM,yBD7uGN,mDC8QE,yCCozDkD,CDpzDlD,+BCozDyF,CDpzDzF,+BD9QF,kCCwvGI,6CDxvGJ,6FC2vGM,4CACA,kBD5vGN,2DCqwGM,iBACA,6CDtwGN,uDCkxGM,sCDlxGN,uECuyGM,yBDvyGN,qEC6yGM,qCD7yGN,mECmzGM,yBDnzGN,mFCuyGM,yBDvyGN,iFC6yGM,oCD7yGN,+ECmzGM,yBDnzGN,gFCuyGM,yBDvyGN,8EC6yGM,mCD7yGN,4ECmzGM,yBDnzGN,yEC01GM,sBD11GN,yCC8QE,wCCu1D+C,CDv1D/C,2BCu1DoF,CDv1DpF,4BAklGE,yBDh2GJ,uCCo2GI,sCDp2GJ,8CCg5GI,sCDh5GJ,2JCs3GI,yBDt3GJ,2DC03GI,WD13GJ,wJCs3GI,yBDt3GJ,0DC03GI,sBD13GJ,kJCs3GI,yBDt3GJ,wDC03GI,WD13GJ,wCCg6GI,oCDh6GJ,4XCs6GM,sCDt6GN,8DC07GM,uCD17GN,sLCg8GQ,sBDh8GR,8MCs8GU,sCDt8GV,8FC68GQ,kCACA,6BD98GR,8MCo9GU,kCDp9GV,sPCw9GU,kCDx9GV,kEC+9GI,kCD/9GJ,0DCm+GI,6HAIA,kIDv+GJ,wDC4+GI,8HD5+GJ,qJCygHM,uCAMF,oBD/gHJ,wCCihHQ,gBDjhHR,uGCyhHM,2BDzhHN,iDC+hHM,sCACA,WDhiHN,kLCsiHM,yBACA,WDviHN,6DC2iHM,6BACA,cD5iHN,wECgjHM,WDhjHN,uECojHM,cDpjHN,gFCyjHI,yBDzjHJ,oDC6jHI,wCD7jHJ,6JCmkHI,uCDnkHJ,wCCmnHM,cDnnHN,mEC2oHI,8CD3oHJ,iICipHM,2CACA,mBDlpHN,+DCupHI,WDvpHJ,iGC0pHM,2BD1pHN,oDC+pHI,kBD/pHJ,wFCmqHI,kCDnqHJ,kICyqHI,mBACA,gBD1qHJ,wzBCutHQ,sCDvtHR,oHC6sHI,yBD7sHJ,kKC6sHI,sBD7sHJ,gzBCutHQ,sCDvtHR,kHC6sHI,yBD7sHJ,8JC6sHI,iCD7sHJ,gyBCutHQ,sCDvtHR,8GC6sHI,yBD7sHJ,sJC6sHI,sBD7sHJ,g5BCutHQ,sCDvtHR,8RCguHI,yBDhuHJ,0RCquHI,WDruHJ,8VCwuHM,2BDxuHN,sLC8uHI,kBD9uHJ,8PCkvHI,kCDlvHJ,wJCwvHI,uCDxvHJ,w4BCutHQ,sCDvtHR,0RCguHI,yBDhuHJ,sRCquHI,sBDruHJ,0VCwuHM,qBDxuHN,oLC8uHI,6BD9uHJ,4PCkvHI,4BDlvHJ,sJCwvHI,iCDxvHJ,w3BCutHQ,sCDvtHR,kRCguHI,yBDhuHJ,8QCquHI,WDruHJ,kVCwuHM,2BDxuHN,gLC8uHI,kBD9uHJ,wPCkvHI,kCDlvHJ,kJCwvHI,uCDxvHJ,8BCgzHI,mBACA,WDjzHJ,0CCgxHE,mBACA,WDjxHF,yCCgxHE,mBACA,sBDjxHF,uCCgxHE,mBACA,WDjxHF,+KCwxHI,8BDxxHJ,iSCgyHI,cDhyHJ,iDCoyHI,yBDpyHJ,8BC+1HI,6BD/1HJ,2BC+jJI,mBD/jJJ,uECokJI,WDpkJJ,0CC63HI,sBACA,mBAhnHF,wCC0jE+C,CD1jE/C,4BC0jEqF,CD1jErF,6BD9QF,6CCo4HI,cD53HJ,wDACE,iBACA,eACA,cACA,mBAGF,mBACE,mBACA,iBG5LF,WACE,WAGF,yBACE,WACE,iBAIJ,yBACE,WACE,iBAIJ,yBACE,WACE,iBAIJ,0BACE,WACE,kBAIJ,UAEE,WAGF,KACE,SAGF,aACE,aACA,uBAGF,qBACE,mBACA,oBAGF,mBACE,YACA,gBAGF,YACE,gBACA,UAGF,iBACE,wBACG,qBACK,gBAGV,UACE,4BAGF,UACE,4BAGF,WACE,6BAGF,gBACE,6BAGF,UACE,yBAGF,iBACE,yBAGF,gBACE,yBAGF,cACE,yBAGF,SACE,yBAGF,eACE,yBAGF,iBACE,yBAGF,kBACE,yBAGF,UACE,sBAGF,gBACE,yBAGF,eACE,yBAGF,aACE,yBAGF,QACE,yBAGF,cACE,yBAGF,gBACE,yBAGF,iBACE,yBAGF,mBACE,yBAGF,kBACE,yBAGF,gBACE,yBAGF,WACE,yBAGF,iBACE,yBAGF,mBACE,yBAGF,oBACE,yBAGF,mBACE,yBAGF,kBACE,yBAGF,gBACE,yBAGF,WACE,yBAGF,iBACE,yBAGF,mBACE,yBAGF,oBACE,yBAGF,kBACE,yBAGF,iBACE,yBAGF,eACE,yBAGF,UACE,yBAGF,gBACE,yBAGF,kBACE,yBAGF,mBACE,yBAGF,iBACE,yBAGF,gBACE,yBAGF,cACE,yBAGF,SACE,yBAGF,eACE,yBAGF,iBACE,yBAGF,kBACE,yBAGF,iBACE,yBAGF,gBACE,yBAGF,cACE,yBAGF,SACE,yBAGF,eACE,yBAGF,iBACE,yBAGF,kBACE,yBAGF,mBACE,yBAGF,kBACE,yBAGF,gBACE,yBAGF,WACE,yBAGF,iBACE,yBAGF,mBACE,yBAGF,oBACE,yBAGF,mBACE,yBAGF,kBACE,yBAGF,gBACE,yBAGF,WACE,yBAGF,iBACE,yBAGF,mBACE,yBAGF,oBACE,yBAGF,iBACE,yBAGF,gBACE,yBAGF,cACE,yBAGF,SACE,yBAGF,eACE,yBAGF,iBACE,yBAGF,kBACE,yBAGF,WACE,2BAGF,WACE,2BAGF,SACE,yBAGF,gBACE,gCAGF,aACE,6BAGF,UACE,0BAGF,iBACE,iCAGF,cACE,8BAGF,QACE,wBAGF,WACE,yBAGF,cACE,4BAGF,aACE,2BAGF,aACE,2BAGF,SACE,qBAGF,UACE,sBAGF,YACE,wBAGF,iBACE,yBAGF,iBACE,yBAGF,oBACE,yBAGF,cACE,qBAGF,qBACE,qBAGF,oBACE,qBAGF,kBACE,qBAGF,aACE,qBAGF,mBACE,qBAGF,qBACE,qBAGF,sBACE,qBAGF,cACE,kBAGF,oBACE,qBAGF,mBACE,qBAGF,iBACE,qBAGF,YACE,qBAGF,kBACE,qBAGF,oBACE,qBAGF,qBACE,qBAGF,uBACE,qBAGF,sBACE,qBAGF,oBACE,qBAGF,eACE,qBAGF,qBACE,qBAGF,uBACE,qBAGF,wBACE,qBAGF,uBACE,qBAGF,sBACE,qBAGF,oBACE,qBAGF,eACE,qBAGF,qBACE,qBAGF,uBACE,qBAGF,wBACE,qBAGF,sBACE,qBAGF,qBACE,qBAGF,mBACE,qBAGF,cACE,qBAGF,oBACE,qBAGF,sBACE,qBAGF,uBACE,qBAGF,qBACE,qBAGF,oBACE,qBAGF,kBACE,qBAGF,aACE,qBAGF,mBACE,qBAGF,qBACE,qBAGF,sBACE,qBAGF,qBACE,qBAGF,oBACE,qBAGF,kBACE,qBAGF,aACE,qBAGF,mBACE,qBAGF,qBACE,qBAGF,sBACE,qBAGF,uBACE,qBAGF,sBACE,qBAGF,oBACE,qBAGF,eACE,qBAGF,qBACE,qBAGF,uBACE,qBAGF,wBACE,qBAGF,uBACE,qBAGF,sBACE,qBAGF,oBACE,qBAGF,eACE,qBAGF,qBACE,qBAGF,uBACE,qBAGF,wBACE,qBAGF,qBACE,qBAGF,oBACE,qBAGF,kBACE,qBAGF,aACE,qBAGF,mBACE,qBAGF,qBACE,qBAGF,sBACE,qBAGF,cACE,gBAGF,YACE,sBAGF,SACE,qBAGF,YACE,oBAGF,cACE,qBAGF,gBACE,yBACA,0BAGF,gBACE,0BACA,6BAGF,gBACE,6BACA,4BAGF,gBACE,yBACA,4BAGF,cACE,+BACA,gCAGF,cACE,gCACA,mCAGF,cACE,mCACA,kCAGF,cACE,+BACA,kCAGF,WACE,8BACA,+BAGF,WACE,+BACA,kCAGF,WACE,kCACA,iCAGF,WACE,8BACA,iCAGF,cACE,6BACA,8BAGF,cACE,8BACA,iCAGF,cACE,iCACA,gCAGF,cACE,6BACA,gCAGF,gBACE,8BACA,+BAGF,gBACE,+BACA,kCAGF,gBACE,kCACA,iCAGF,gBACE,8BACA,iCAGF,iBACE,yBAGF,iBACE,0BAGF,iBACE,6BAGF,iBACE,4BAGF,eACE,+BAGF,eACE,gCAGF,eACE,mCAGF,eACE,kCAGF,YACE,8BAGF,YACE,+BAGF,YACE,kCAGF,YACE,iCAGF,eACE,6BAGF,eACE,8BAGF,eACE,iCAGF,eACE,gCAGF,iBACE,8BAGF,iBACE,+BAGF,iBACE,kCAGF,iBACE,iCAGF,cACE,mBAGF,eACE,oBAGF,eACE,oBAGF,aACE,kBAGF,UACE,eAGF,UACE,iBAGF,UACE,iBAGF,UACE,iBAGF,QACE,iBAGF,YACE,mBAGF,YACE,qBAGF,YACE,sBAGF,YACE,oBAGF,YACE,qBAGF,YACE,uBAGF,YACE,wBAGF,YACE,sBAGF,YACE,qBAGF,YACE,uBAGF,YACE,wBAGF,YACE,sBAGF,YACE,qBAGF,YACE,uBAGF,YACE,wBAGF,YACE,sBAGF,UACE,qBAGF,UACE,uBAGF,UACE,wBAGF,UACE,sBAGF,aACE,YAGF,gBACE,eAGF,gBACE,eAGF,aACE,YAGF,aACE,YAGF,oBACE,mBAGF,OACE,cAGF,cACE,qBAGF,QACE,eAGF,OACE,cAGF,WACE,kBAGF,YACE,mBAGF,QACE,aAGF,MACE,aAGF,aACE,oBAGF,UACE,mBAGF,kBACE,2BAGF,UACE,sBAGF,kBACE,8BAGF,WACE,eAGF,mBACE,uBAGF,cACE,iBAGF,aACE,uBAGF,WACE,qBAGF,cACE,mBAGF,gBACE,qBAGF,eACE,oBAGF,WACE,gBAGF,YACE,sBAGF,UACE,oBAGF,aACE,kBAGF,cACE,mBAGF,eACE,2BAGF,aACE,yBAGF,gBACE,uBAGF,iBACE,8BAGF,gBACE,6BAGF,gBACE,qBAGF,eACE,yBAGF,aACE,uBAGF,iBACE,4BAGF,gBACE,2BAGF,QACE,YAGF,WACE,cAGF,cACE,cAGF,WACE,UAGF,WACE,YAGF,aACE,cAGF,cACE,YAGF,gBACE,cAGF,aACE,YAGF,YACE,WAGF,YACE,WAGF,eACE,gBAGF,WACE,gBAGF,YACE,gBAGF,aACE,gBAGF,aACE,gBAGF,eACE,gBAGF,WACE,gBAGF,gBACE,gBAGF,YACE,gBAGF,KACE,cAGF,KACE,aAGF,KACE,cAGF,KACE,YAGF,KACE,eAGF,KACE,cAGF,KACE,YAGF,MACE,cAGF,MACE,YAGF,MACE,YAGF,MACE,YAGF,MACE,YAGF,MACE,aAGF,MACE,aAGF,QACE,YAGF,MACE,WAGF,QACE,YAGF,UACE,aAGF,cACE,cAGF,eACE,iBAGF,gBACE,gBAGF,eACE,cAGF,KACE,SAGF,KACE,cAGF,KACE,aAGF,KACE,cAGF,KACE,YAGF,KACE,eAGF,KACE,cAGF,KACE,YAGF,MACE,cAGF,MACE,YAGF,MACE,YAGF,MACE,YAGF,MACE,YAGF,MACE,YAGF,QACE,YAGF,MACE,WAGF,MACE,aACA,gBAGF,MACE,cACA,eAGF,MACE,kBACA,qBAGF,MACE,mBACA,oBAGF,MACE,iBACA,oBAGF,MACE,kBACA,mBAGF,MACE,kBACA,qBAGF,MACE,mBACA,oBAGF,MACE,gBACA,mBAGF,MACE,iBACA,kBAGF,MACE,mBACA,sBAGF,MACE,oBACA,qBAGF,MACE,kBACA,qBAGF,MACE,mBACA,oBAGF,MACE,gBACA,mBAGF,MACE,iBACA,kBAGF,OACE,kBACA,qBAGF,OACE,mBACA,oBAGF,OACE,gBACA,mBAGF,OACE,iBACA,kBAGF,OACE,gBACA,mBAGF,OACE,iBACA,kBAGF,OACE,gBACA,mBAGF,OACE,iBACA,kBAGF,OACE,gBACA,mBAGF,OACE,iBACA,kBAGF,OACE,gBACA,mBAGF,OACE,iBACA,kBAGF,SACE,gBACA,mBAGF,SACE,iBACA,kBAGF,OACE,eACA,kBAGF,OACE,gBACA,iBAGF,MACE,aAGF,MACE,eAGF,MACE,gBAGF,MACE,cAGF,MACE,kBAGF,MACE,oBAGF,MACE,qBAGF,MACE,mBAGF,MACE,iBAGF,MACE,mBAGF,MACE,oBAGF,MACE,kBAGF,MACE,kBAGF,MACE,oBAGF,MACE,qBAGF,MACE,mBAGF,MACE,gBAGF,MACE,kBAGF,MACE,mBAGF,MACE,iBAGF,MACE,mBAGF,MACE,qBAGF,MACE,sBAGF,MACE,oBAGF,MACE,kBAGF,MACE,oBAGF,MACE,qBAGF,MACE,mBAGF,MACE,gBAGF,MACE,kBAGF,MACE,mBAGF,MACE,iBAGF,OACE,kBAGF,OACE,oBAGF,OACE,qBAGF,OACE,mBAGF,OACE,gBAGF,OACE,kBAGF,OACE,mBAGF,OACE,iBAGF,OACE,gBAGF,OACE,kBAGF,OACE,mBAGF,OACE,iBAGF,OACE,gBAGF,OACE,kBAGF,OACE,mBAGF,OACE,iBAGF,OACE,gBAGF,OACE,kBAGF,OACE,mBAGF,OACE,iBAGF,OACE,gBAGF,OACE,kBAGF,OACE,mBAGF,OACE,iBAGF,SACE,gBAGF,SACE,kBAGF,SACE,mBAGF,SACE,iBAGF,OACE,eAGF,OACE,iBAGF,OACE,kBAGF,OACE,gBAGF,YACE,gBAGF,cACE,iBAGF,UACE,gBAGF,UACE,gBAGF,UACE,gBAGF,UACE,gBAGF,UACE,gBAGF,WACE,gBAGF,WACE,gBAGF,WACE,gBAGF,WACE,iBAGF,YACE,eAGF,SACE,aAGF,YACE,gBAGF,cACE,iBAGF,SACE,YAGF,YACE,eAGF,MACE,SAGF,MACE,eAGF,MACE,cAGF,MACE,eAGF,MACE,aAGF,MACE,gBAGF,MACE,eAGF,MACE,aAGF,OACE,eAGF,OACE,aAGF,OACE,aAGF,OACE,aAGF,OACE,aAGF,OACE,aAGF,OACE,YAGF,OACE,aACA,gBAGF,OACE,cACA,eAGF,OACE,mBACA,sBAGF,OACE,oBACA,qBAGF,OACE,kBACA,qBAGF,OACE,mBACA,oBAGF,OACE,mBACA,sBAGF,OACE,oBACA,qBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,OACE,oBACA,uBAGF,OACE,qBACA,sBAGF,OACE,mBACA,sBAGF,OACE,oBACA,qBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,QACE,mBACA,sBAGF,QACE,oBACA,qBAGF,QACE,iBACA,oBAGF,QACE,kBACA,mBAGF,QACE,iBACA,oBAGF,QACE,kBACA,mBAGF,QACE,iBACA,oBAGF,QACE,kBACA,mBAGF,QACE,iBACA,oBAGF,QACE,kBACA,mBAGF,QACE,iBACA,oBAGF,QACE,kBACA,mBAGF,QACE,gBACA,mBAGF,QACE,iBACA,kBAGF,OACE,aAGF,OACE,eAGF,OACE,gBAGF,OACE,cAGF,OACE,mBAGF,OACE,qBAGF,OACE,sBAGF,OACE,oBAGF,OACE,kBAGF,OACE,oBAGF,OACE,qBAGF,OACE,mBAGF,OACE,mBAGF,OACE,qBAGF,OACE,sBAGF,OACE,oBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,OACE,oBAGF,OACE,sBAGF,OACE,uBAGF,OACE,qBAGF,OACE,mBAGF,OACE,qBAGF,OACE,sBAGF,OACE,oBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,QACE,mBAGF,QACE,qBAGF,QACE,sBAGF,QACE,oBAGF,QACE,iBAGF,QACE,mBAGF,QACE,oBAGF,QACE,kBAGF,QACE,iBAGF,QACE,mBAGF,QACE,oBAGF,QACE,kBAGF,QACE,iBAGF,QACE,mBAGF,QACE,oBAGF,QACE,kBAGF,QACE,iBAGF,QACE,mBAGF,QACE,oBAGF,QACE,kBAGF,QACE,iBAGF,QACE,mBAGF,QACE,oBAGF,QACE,kBAGF,QACE,gBAGF,QACE,kBAGF,QACE,mBAGF,QACE,iBAGF,WACE,UAGF,YACE,YAGF,YACE,WAGF,YACE,YAGF,aACE,UAGF,cACE,UAGF,eACE,cAGF,iBACE,gBAGF,kBACE,iBAGF,iBACE,gBAGF,iBACE,gBAGF,iBACE,gBAGF,mBACE,kBAGF,mBACE,kBAGF,oBACE,mBAGF,oBACE,mBAGF,mBACE,kBAGF,mBACE,kBAGF,iBACE,iCAGF,gBACE,gCAGF,KACE,UAGF,KACE,eAGF,KACE,cAGF,KACE,eAGF,KACE,aAGF,KACE,gBAGF,KACE,eAGF,KACE,aAGF,MACE,eAGF,MACE,aAGF,MACE,aAGF,MACE,aAGF,MACE,aAGF,MACE,aAGF,MACE,YAGF,MACE,cACA,iBAGF,MACE,eACA,gBAGF,MACE,mBACA,sBAGF,MACE,oBACA,qBAGF,MACE,kBACA,qBAGF,MACE,mBACA,oBAGF,MACE,mBACA,sBAGF,MACE,oBACA,qBAGF,MACE,iBACA,oBAGF,MACE,kBACA,mBAGF,MACE,oBACA,uBAGF,MACE,qBACA,sBAGF,MACE,mBACA,sBAGF,MACE,oBACA,qBAGF,MACE,iBACA,oBAGF,MACE,kBACA,mBAGF,OACE,mBACA,sBAGF,OACE,oBACA,qBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,OACE,iBACA,oBAGF,OACE,kBACA,mBAGF,OACE,gBACA,mBAGF,OACE,iBACA,kBAGF,MACE,cAGF,MACE,gBAGF,MACE,iBAGF,MACE,eAGF,MACE,mBAGF,MACE,qBAGF,MACE,sBAGF,MACE,oBAGF,MACE,kBAGF,MACE,oBAGF,MACE,qBAGF,MACE,mBAGF,MACE,mBAGF,MACE,qBAGF,MACE,sBAGF,MACE,oBAGF,MACE,iBAGF,MACE,mBAGF,MACE,oBAGF,MACE,kBAGF,MACE,oBAGF,MACE,sBAGF,MACE,uBAGF,MACE,qBAGF,MACE,mBAGF,MACE,qBAGF,MACE,sBAGF,MACE,oBAGF,MACE,iBAGF,MACE,mBAGF,MACE,oBAGF,MACE,kBAGF,OACE,mBAGF,OACE,qBAGF,OACE,sBAGF,OACE,oBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,OACE,iBAGF,OACE,mBAGF,OACE,oBAGF,OACE,kBAGF,OACE,gBAGF,OACE,kBAGF,OACE,mBAGF,OACE,iBAGF,qBACE,oBAGF,qBACE,oBAGF,QACE,gBAGF,OACE,eAGF,UACE,kBAGF,UACE,kBAGF,QACE,wBACA,gBAGF,UACE,SACA,WACA,YACA,UAGF,KACE,MACA,QACA,SACA,OAGF,OACE,MACA,SAGF,OACE,QACA,OAGF,OACE,MAGF,OACE,QAGF,OACE,SAGF,OACE,OAGF,aACE,YAGF,UACE,gBAGF,UACE,kBAGF,QACE,YAGF,QACE,sCAGF,WACE,sCD+yD2C,CC/yD3C,4BAGF,WACE,wCD8yD6C,CC9yD7C,6BAGF,cACE,6CAGF,gBACE,yCAGF,aACE,gBAGF,cACE,kBAGF,gBACE,oBAGF,YACE,kBAGF,aACE,mBAGF,WACE,gBAGF,aACE,kBAGF,YACE,iBAGF,cACE,mBAGF,kBACE,kBAGF,YACE,cAGF,mBACE,cAGF,kBACE,cAGF,gBACE,cAGF,WACE,cAGF,iBACE,cAGF,mBACE,cAGF,oBACE,cAGF,YACE,WAGF,kBACE,cAGF,iBACE,cAGF,eACE,cAGF,UACE,cAGF,gBACE,cAGF,kBACE,cAGF,mBACE,cAGF,qBACE,cAGF,oBACE,cAGF,kBACE,cAGF,aACE,cAGF,mBACE,cAGF,qBACE,cAGF,sBACE,cAGF,qBACE,cAGF,oBACE,cAGF,kBACE,cAGF,aACE,cAGF,mBACE,cAGF,qBACE,cAGF,sBACE,cAGF,oBACE,cAGF,mBACE,cAGF,iBACE,cAGF,YACE,cAGF,kBACE,cAGF,oBACE,cAGF,qBACE,cAGF,mBACE,cAGF,kBACE,cAGF,gBACE,cAGF,WACE,cAGF,iBACE,cAGF,mBACE,cAGF,oBACE,cAGF,mBACE,cAGF,kBACE,cAGF,gBACE,cAGF,WACE,cAGF,iBACE,cAGF,mBACE,cAGF,oBACE,cAGF,qBACE,cAGF,oBACE,cAGF,kBACE,cAGF,aACE,cAGF,mBACE,cAGF,qBACE,cAGF,sBACE,cAGF,qBACE,cAGF,oBACE,cAGF,kBACE,cAGF,aACE,cAGF,mBACE,cAGF,qBACE,cAGF,sBACE,cAGF,mBACE,cAGF,kBACE,cAGF,gBACE,cAGF,WACE,cAGF,iBACE,cAGF,mBACE,cAGF,oBACE,cAGF,SACE,iBAGF,SACE,kBAGF,WACE,eAGF,SACE,mBAGF,SACE,kBAGF,UACE,iBAGF,UACE,mBAGF,UACE,kBAGF,UACE,eAGF,QACE,kBAGF,OACE,kBAGF,WACE,yBAGF,WACE,yBAGF,YACE,0BAGF,aACE,oBAGF,WACE,0BAGF,cACE,6BAGF,cACE,qBAGF,aACE,mCACA,kCAGF,sBACE,4BACA,6BAGF,gBACE,sBAGF,iBACE,iBAGF,eACE,qBAGF,aACE,yBACG,sBACC,qBACI,iBAGV,aACE,yBACG,sBACC,qBACI,iBAGV,gBACE,wBAGF,WACE,mBAGF,cACE,sBAGF,cACE,sBAGF,gBACE,wBAGF,mBACE,2BAGF,SACE,mBAGF,WACE,kBAGF,mBACE,mBAGF,oBACE,mBAGF,gBACE,gBAGF,qBACE,qBAGF,qBACE,qBAGF,aACE,qBAGF,cACE,iBAGF,UACE,gBACA,uBACA,mBAGF,KACE,aAGF,KACE,YAGF,KACE,aAGF,KACE,WAGF,KACE,cAGF,KACE,aAGF,KACE,WAGF,MACE,aAGF,MACE,WAGF,MACE,WAGF,MACE,WAGF,MACE,WAGF,MACE,YAGF,MACE,YAGF,QACE,WAGF,MACE,UAGF,QACE,gBAGF,QACE,WAGF,UACE,YAGF,KACE,UAGF,MACE,WAGF,MACE,WAGF,MACE,WAGF,MACE,WAGF,MACE,WAGF,QACE,aCniHF,iCACE,wBACA,wBACA,4BAGF,WAEE,kBACA,qBACA,mBACA,gBALF,kBAOI,gBAPJ,6BAUI,UAKF,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI,kDAHJ,iBACE,qDADF,mCAGI,qDAHJ,cACE,kDADF,gCAGI,kDAHJ,kBACE,sDADF,oCAGI,sDAHJ,kBACE,sDADF,oCAGI,sDAHJ,kBACE,sDADF,oCAGI,sDAHJ,kBACE,sDADF,oCAGI,sDAHJ,cACE,kDADF,gCAGI,kDAHJ,cACE,kDADF,gCAGI","file":"styles.35c4e377b6a29ada3fb5.css","sourcesContent":["/**\n* Generated theme by Material Theme Generator\n* https://material-theme-generator.travetto.io\n*/\n@import '~@angular/material/theming';\n// Include the common styles for Angular Material. We include this here so that you only\n// have to load a single css file for Angular Material in your app.\n// Fonts\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500');\n\n// Foreground Elements\n\n// Light Theme Text\n$dark-text: #000000;\n$dark-primary-text: rgba($dark-text, 0.87);\n$dark-accent-text: rgba($dark-primary-text, 0.54);\n$dark-disabled-text: rgba($dark-primary-text, 0.38);\n$dark-dividers: rgba($dark-primary-text, 0.12);\n$dark-focused: rgba($dark-primary-text, 0.12);\n\n$mat-light-theme-foreground: (\n  base: black,\n  divider: $dark-dividers,\n  dividers: $dark-dividers,\n  disabled: $dark-disabled-text,\n  disabled-button: rgba($dark-text, 0.26),\n  disabled-text: $dark-disabled-text,\n  elevation: black,\n  secondary-text: $dark-accent-text,\n  hint-text: $dark-disabled-text,\n  accent-text: $dark-accent-text,\n  icon: $dark-accent-text,\n  icons: $dark-accent-text,\n  text: $dark-primary-text,\n  slider-min: $dark-primary-text,\n  slider-off: rgba($dark-text, 0.26),\n  slider-off-active: $dark-disabled-text,\n);\n\n// Dark Theme text\n$light-text: #ffffff;\n$light-primary-text: $light-text;\n$light-accent-text: rgba($light-primary-text, 0.7);\n$light-disabled-text: rgba($light-primary-text, 0.5);\n$light-dividers: rgba($light-primary-text, 0.12);\n$light-focused: rgba($light-primary-text, 0.12);\n\n$mat-dark-theme-foreground: (\n  base: $light-text,\n  divider: $light-dividers,\n  dividers: $light-dividers,\n  disabled: $light-disabled-text,\n  disabled-button: rgba($light-text, 0.3),\n  disabled-text: $light-disabled-text,\n  elevation: black,\n  hint-text: $light-disabled-text,\n  secondary-text: $light-accent-text,\n  accent-text: $light-accent-text,\n  icon: $light-text,\n  icons: $light-text,\n  text: $light-text,\n  slider-min: $light-text,\n  slider-off: rgba($light-text, 0.3),\n  slider-off-active: rgba($light-text, 0.3),\n);\n\n// Background config\n// Light bg\n$light-background: #fafafa;\n$light-bg-darker-5: darken($light-background, 5%);\n$light-bg-darker-10: darken($light-background, 10%);\n$light-bg-darker-20: darken($light-background, 20%);\n$light-bg-darker-30: darken($light-background, 30%);\n$light-bg-lighter-5: lighten($light-background, 5%);\n$dark-bg-alpha-4: rgba(#2c2c2c, 0.04);\n$dark-bg-alpha-12: rgba(#2c2c2c, 0.12);\n\n$mat-light-theme-background: (\n  background: $light-background,\n  status-bar: $light-bg-darker-20,\n  app-bar: $light-bg-darker-5,\n  hover: $dark-bg-alpha-4,\n  card: $light-bg-lighter-5,\n  dialog: $light-bg-lighter-5,\n  disabled-button: $dark-bg-alpha-12,\n  raised-button: $light-bg-lighter-5,\n  focused-button: $dark-focused,\n  selected-button: $light-bg-darker-20,\n  selected-disabled-button: $light-bg-darker-30,\n  disabled-button-toggle: $light-bg-darker-10,\n  unselected-chip: $light-bg-darker-10,\n  disabled-list-option: $light-bg-darker-10,\n);\n\n// Dark bg\n$dark-background: #2c2c2c;\n$dark-bg-lighter-5: lighten($dark-background, 5%);\n$dark-bg-lighter-10: lighten($dark-background, 10%);\n$dark-bg-lighter-20: lighten($dark-background, 20%);\n$dark-bg-lighter-30: lighten($dark-background, 30%);\n$light-bg-alpha-4: rgba(#fafafa, 0.04);\n$light-bg-alpha-12: rgba(#fafafa, 0.12);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  background: $dark-background,\n  status-bar: $dark-bg-lighter-20,\n  app-bar: $dark-bg-lighter-5,\n  hover: $light-bg-alpha-4,\n  card: $dark-bg-lighter-5,\n  dialog: $dark-bg-lighter-5,\n  disabled-button: $light-bg-alpha-12,\n  raised-button: $dark-bg-lighter-5,\n  focused-button: $light-focused,\n  selected-button: $dark-bg-lighter-20,\n  selected-disabled-button: $dark-bg-lighter-30,\n  disabled-button-toggle: $dark-bg-lighter-10,\n  unselected-chip: $dark-bg-lighter-20,\n  disabled-list-option: $dark-bg-lighter-10,\n);\n\n// Compute font config (not anymore it makes things buggy\n@include mat-core();\n\n// Theme Config\n\n$mat-primary: (\n  main: #212121,\n  lighter: #bcbcbc,\n  darker: #141414,\n  200: #212121, // For slide toggle,\n  contrast : (\n    main: $light-primary-text,\n    lighter: $dark-primary-text,\n    darker: $light-primary-text,\n  )\n);\n$theme-primary: mat-palette($mat-primary, main, lighter, darker);\n\n$mat-accent: (\n  main: #fb8c00,\n  lighter: #feddb3,\n  darker: #f96f00,\n  200: #fb8c00, // For slide toggle,\n  contrast : (\n    main: $dark-primary-text,\n    lighter: $dark-primary-text,\n    darker: $dark-primary-text,\n  )\n);\n$theme-accent: mat-palette($mat-accent, main, lighter, darker);\n\n$mat-warn: (\n  main: #c00000,\n  lighter: #ecb3b3,\n  darker: #aa0000,\n  200: #c00000, // For slide toggle,\n  contrast : (\n    main: $light-primary-text,\n    lighter: $dark-primary-text,\n    darker: $light-primary-text,\n  )\n);\n$theme-warn: mat-palette($mat-warn, main, lighter, darker);\n\n$theme: mat-light-theme($theme-primary, $theme-accent, $theme-warn);\n$altTheme: mat-dark-theme($theme-primary, $theme-accent, $theme-warn);\n\n// Theme Init\n@include angular-material-theme($theme);\n\n.theme-alternate {\n  @include angular-material-theme($altTheme);\n}\n\n\n// Specific component overrides, pieces that are not in line with the general theming\n\n// Handle buttons appropriately, with respect to line-height\n.mat-raised-button, .mat-stroked-button, .mat-flat-button {\n  padding: 0 1.15em;\n  margin: 0 .65em;\n  min-width: 3em;\n  line-height: 36.4px\n}\n\n.mat-standard-chip {\n  padding: .5em .85em;\n  min-height: 2.5em;\n}\n","// Import all the theming functionality.\n// We can use relative imports for imports from the cdk because we bundle everything\n// up into a single flat scss file for material.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32);\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n// Applies styles for users in high contrast mode. Note that this only applies\n// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n// attribute, however Chrome handles high contrast differently.\n//\n// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n//    `white-on-black` or `black-on-white`.\n@mixin cdk-high-contrast($target: active) {\n  @media (-ms-high-contrast: $target) {\n    @content;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    animation-name: cdk-text-field-autofill-end;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n    animation-fill-mode: both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start,\n                    cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: null) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300),\n  $display-3:     mat-typography-level(56px, 56px, 400),\n  $display-2:     mat-typography-level(45px, 48px, 400),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n      mat-font-size($config, body-1) * 0.83,\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n      mat-font-size($config, body-1) * 0.67,\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  // Note: The spec doesn't mention letter spacing. The value comes from\n  // eyeballing it until it looked exactly like the spec examples.\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n    letter-spacing: -0.05em;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n    letter-spacing: -0.02em;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n    letter-spacing: -0.005em;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    font-size: $mat-badge-font-size / 2;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    background-color: mat-color($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    background-color: mat-color($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    background-color: mat-color($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', default);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n\n    @include cdk-high-contrast(black-on-white) {\n      // Having the one above be !important ends up overriding the browser's automatic\n      // color inversion so we need to re-invert it ourselves for black-on-white.\n      stroke: #000 !important;\n    }\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n\n  // This one is moved down here so it can target both\n  // the theme colors and the disabled state.\n  @include cdk-high-contrast {\n    .mat-checkbox-background {\n      // Needs to be removed because it hides the checkbox outline.\n      background: none;\n    }\n  }\n\n  .mat-checkbox:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    background: mat-color($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    $color: mat-color($foreground, hint-text);\n\n    @if (type-of($color) == color) {\n      border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n    }\n    @else {\n      // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n      // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n      // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n      // to it already and we don't want them to stack on top of each other.\n      opacity: 0.5;\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary));\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn));\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header {\n    &:not([aria-disabled='true']) {\n      &.cdk-keyboard-focused,\n      &.cdk-program-focused,\n      &:hover {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-focus-ring-color: mat-color($accent, default, 0.2);\n  $mat-slider-focus-ring-min-value-color: mat-color($foreground, base, 0.12);\n  $mat-slider-tick-color: mat-color($foreground, base, 0.7);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    background-color: $mat-slider-focus-ring-color;\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      background-color: $mat-slider-focus-ring-min-value-color;\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary);\n  $required-label-color: mat-color($accent);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent);\n  $underline-color-warn: mat-color($warn);\n  $underline-focused-color: mat-color($primary);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n",null,".container {\n  width: 100%;\n}\n\n@media (min-width: 576px) {\n  .container {\n    max-width: 576px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 992px) {\n  .container {\n    max-width: 992px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .container {\n    max-width: 1200px;\n  }\n}\n\nhtml,\nbody {\n  width: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n}\n\n.spacing-container > * {\n  margin-left: .75rem;\n  margin-right: .75rem;\n}\n\n.content-container {\n  margin: auto;\n  width: 66.66667%;\n}\n\n.list-reset {\n  list-style: none;\n  padding: 0;\n}\n\n.appearance-none {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n\n.bg-fixed {\n  background-attachment: fixed;\n}\n\n.bg-local {\n  background-attachment: local;\n}\n\n.bg-scroll {\n  background-attachment: scroll;\n}\n\n.bg-transparent {\n  background-color: transparent;\n}\n\n.bg-black {\n  background-color: #22292f;\n}\n\n.bg-grey-darkest {\n  background-color: #3d4852;\n}\n\n.bg-grey-darker {\n  background-color: #606f7b;\n}\n\n.bg-grey-dark {\n  background-color: #8795a1;\n}\n\n.bg-grey {\n  background-color: #b8c2cc;\n}\n\n.bg-grey-light {\n  background-color: #dae1e7;\n}\n\n.bg-grey-lighter {\n  background-color: #f1f5f8;\n}\n\n.bg-grey-lightest {\n  background-color: #f8fafc;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.bg-red-darkest {\n  background-color: #3b0d0c;\n}\n\n.bg-red-darker {\n  background-color: #621b18;\n}\n\n.bg-red-dark {\n  background-color: #cc1f1a;\n}\n\n.bg-red {\n  background-color: #e3342f;\n}\n\n.bg-red-light {\n  background-color: #ef5753;\n}\n\n.bg-red-lighter {\n  background-color: #f9acaa;\n}\n\n.bg-red-lightest {\n  background-color: #fcebea;\n}\n\n.bg-orange-darkest {\n  background-color: #462a16;\n}\n\n.bg-orange-darker {\n  background-color: #613b1f;\n}\n\n.bg-orange-dark {\n  background-color: #de751f;\n}\n\n.bg-orange {\n  background-color: #f6993f;\n}\n\n.bg-orange-light {\n  background-color: #faad63;\n}\n\n.bg-orange-lighter {\n  background-color: #fcd9b6;\n}\n\n.bg-orange-lightest {\n  background-color: #fff5eb;\n}\n\n.bg-yellow-darkest {\n  background-color: #453411;\n}\n\n.bg-yellow-darker {\n  background-color: #684f1d;\n}\n\n.bg-yellow-dark {\n  background-color: #f2d024;\n}\n\n.bg-yellow {\n  background-color: #ffed4a;\n}\n\n.bg-yellow-light {\n  background-color: #fff382;\n}\n\n.bg-yellow-lighter {\n  background-color: #fff9c2;\n}\n\n.bg-yellow-lightest {\n  background-color: #fcfbeb;\n}\n\n.bg-green-darkest {\n  background-color: #0f2f21;\n}\n\n.bg-green-darker {\n  background-color: #1a4731;\n}\n\n.bg-green-dark {\n  background-color: #1f9d55;\n}\n\n.bg-green {\n  background-color: #38c172;\n}\n\n.bg-green-light {\n  background-color: #51d88a;\n}\n\n.bg-green-lighter {\n  background-color: #a2f5bf;\n}\n\n.bg-green-lightest {\n  background-color: #e3fcec;\n}\n\n.bg-teal-darkest {\n  background-color: #0d3331;\n}\n\n.bg-teal-darker {\n  background-color: #20504f;\n}\n\n.bg-teal-dark {\n  background-color: #38a89d;\n}\n\n.bg-teal {\n  background-color: #4dc0b5;\n}\n\n.bg-teal-light {\n  background-color: #64d5ca;\n}\n\n.bg-teal-lighter {\n  background-color: #a0f0ed;\n}\n\n.bg-teal-lightest {\n  background-color: #e8fffe;\n}\n\n.bg-blue-darkest {\n  background-color: #12283a;\n}\n\n.bg-blue-darker {\n  background-color: #1c3d5a;\n}\n\n.bg-blue-dark {\n  background-color: #2779bd;\n}\n\n.bg-blue {\n  background-color: #3490dc;\n}\n\n.bg-blue-light {\n  background-color: #6cb2eb;\n}\n\n.bg-blue-lighter {\n  background-color: #bcdefa;\n}\n\n.bg-blue-lightest {\n  background-color: #eff8ff;\n}\n\n.bg-indigo-darkest {\n  background-color: #191e38;\n}\n\n.bg-indigo-darker {\n  background-color: #2f365f;\n}\n\n.bg-indigo-dark {\n  background-color: #5661b3;\n}\n\n.bg-indigo {\n  background-color: #6574cd;\n}\n\n.bg-indigo-light {\n  background-color: #7886d7;\n}\n\n.bg-indigo-lighter {\n  background-color: #b2b7ff;\n}\n\n.bg-indigo-lightest {\n  background-color: #e6e8ff;\n}\n\n.bg-purple-darkest {\n  background-color: #21183c;\n}\n\n.bg-purple-darker {\n  background-color: #382b5f;\n}\n\n.bg-purple-dark {\n  background-color: #794acf;\n}\n\n.bg-purple {\n  background-color: #9561e2;\n}\n\n.bg-purple-light {\n  background-color: #a779e9;\n}\n\n.bg-purple-lighter {\n  background-color: #d6bbfc;\n}\n\n.bg-purple-lightest {\n  background-color: #f3ebff;\n}\n\n.bg-pink-darkest {\n  background-color: #451225;\n}\n\n.bg-pink-darker {\n  background-color: #6f213f;\n}\n\n.bg-pink-dark {\n  background-color: #eb5286;\n}\n\n.bg-pink {\n  background-color: #f66d9b;\n}\n\n.bg-pink-light {\n  background-color: #fa7ea8;\n}\n\n.bg-pink-lighter {\n  background-color: #ffbbca;\n}\n\n.bg-pink-lightest {\n  background-color: #ffebef;\n}\n\n.bg-bottom {\n  background-position: bottom;\n}\n\n.bg-center {\n  background-position: center;\n}\n\n.bg-left {\n  background-position: left;\n}\n\n.bg-left-bottom {\n  background-position: left bottom;\n}\n\n.bg-left-top {\n  background-position: left top;\n}\n\n.bg-right {\n  background-position: right;\n}\n\n.bg-right-bottom {\n  background-position: right bottom;\n}\n\n.bg-right-top {\n  background-position: right top;\n}\n\n.bg-top {\n  background-position: top;\n}\n\n.bg-repeat {\n  background-repeat: repeat;\n}\n\n.bg-no-repeat {\n  background-repeat: no-repeat;\n}\n\n.bg-repeat-x {\n  background-repeat: repeat-x;\n}\n\n.bg-repeat-y {\n  background-repeat: repeat-y;\n}\n\n.bg-auto {\n  background-size: auto;\n}\n\n.bg-cover {\n  background-size: cover;\n}\n\n.bg-contain {\n  background-size: contain;\n}\n\n.border-collapse {\n  border-collapse: collapse;\n}\n\n.border-separate {\n  border-collapse: separate;\n}\n\n.border-transparent {\n  border-color: transparent;\n}\n\n.border-black {\n  border-color: #22292f;\n}\n\n.border-grey-darkest {\n  border-color: #3d4852;\n}\n\n.border-grey-darker {\n  border-color: #606f7b;\n}\n\n.border-grey-dark {\n  border-color: #8795a1;\n}\n\n.border-grey {\n  border-color: #b8c2cc;\n}\n\n.border-grey-light {\n  border-color: #dae1e7;\n}\n\n.border-grey-lighter {\n  border-color: #f1f5f8;\n}\n\n.border-grey-lightest {\n  border-color: #f8fafc;\n}\n\n.border-white {\n  border-color: #fff;\n}\n\n.border-red-darkest {\n  border-color: #3b0d0c;\n}\n\n.border-red-darker {\n  border-color: #621b18;\n}\n\n.border-red-dark {\n  border-color: #cc1f1a;\n}\n\n.border-red {\n  border-color: #e3342f;\n}\n\n.border-red-light {\n  border-color: #ef5753;\n}\n\n.border-red-lighter {\n  border-color: #f9acaa;\n}\n\n.border-red-lightest {\n  border-color: #fcebea;\n}\n\n.border-orange-darkest {\n  border-color: #462a16;\n}\n\n.border-orange-darker {\n  border-color: #613b1f;\n}\n\n.border-orange-dark {\n  border-color: #de751f;\n}\n\n.border-orange {\n  border-color: #f6993f;\n}\n\n.border-orange-light {\n  border-color: #faad63;\n}\n\n.border-orange-lighter {\n  border-color: #fcd9b6;\n}\n\n.border-orange-lightest {\n  border-color: #fff5eb;\n}\n\n.border-yellow-darkest {\n  border-color: #453411;\n}\n\n.border-yellow-darker {\n  border-color: #684f1d;\n}\n\n.border-yellow-dark {\n  border-color: #f2d024;\n}\n\n.border-yellow {\n  border-color: #ffed4a;\n}\n\n.border-yellow-light {\n  border-color: #fff382;\n}\n\n.border-yellow-lighter {\n  border-color: #fff9c2;\n}\n\n.border-yellow-lightest {\n  border-color: #fcfbeb;\n}\n\n.border-green-darkest {\n  border-color: #0f2f21;\n}\n\n.border-green-darker {\n  border-color: #1a4731;\n}\n\n.border-green-dark {\n  border-color: #1f9d55;\n}\n\n.border-green {\n  border-color: #38c172;\n}\n\n.border-green-light {\n  border-color: #51d88a;\n}\n\n.border-green-lighter {\n  border-color: #a2f5bf;\n}\n\n.border-green-lightest {\n  border-color: #e3fcec;\n}\n\n.border-teal-darkest {\n  border-color: #0d3331;\n}\n\n.border-teal-darker {\n  border-color: #20504f;\n}\n\n.border-teal-dark {\n  border-color: #38a89d;\n}\n\n.border-teal {\n  border-color: #4dc0b5;\n}\n\n.border-teal-light {\n  border-color: #64d5ca;\n}\n\n.border-teal-lighter {\n  border-color: #a0f0ed;\n}\n\n.border-teal-lightest {\n  border-color: #e8fffe;\n}\n\n.border-blue-darkest {\n  border-color: #12283a;\n}\n\n.border-blue-darker {\n  border-color: #1c3d5a;\n}\n\n.border-blue-dark {\n  border-color: #2779bd;\n}\n\n.border-blue {\n  border-color: #3490dc;\n}\n\n.border-blue-light {\n  border-color: #6cb2eb;\n}\n\n.border-blue-lighter {\n  border-color: #bcdefa;\n}\n\n.border-blue-lightest {\n  border-color: #eff8ff;\n}\n\n.border-indigo-darkest {\n  border-color: #191e38;\n}\n\n.border-indigo-darker {\n  border-color: #2f365f;\n}\n\n.border-indigo-dark {\n  border-color: #5661b3;\n}\n\n.border-indigo {\n  border-color: #6574cd;\n}\n\n.border-indigo-light {\n  border-color: #7886d7;\n}\n\n.border-indigo-lighter {\n  border-color: #b2b7ff;\n}\n\n.border-indigo-lightest {\n  border-color: #e6e8ff;\n}\n\n.border-purple-darkest {\n  border-color: #21183c;\n}\n\n.border-purple-darker {\n  border-color: #382b5f;\n}\n\n.border-purple-dark {\n  border-color: #794acf;\n}\n\n.border-purple {\n  border-color: #9561e2;\n}\n\n.border-purple-light {\n  border-color: #a779e9;\n}\n\n.border-purple-lighter {\n  border-color: #d6bbfc;\n}\n\n.border-purple-lightest {\n  border-color: #f3ebff;\n}\n\n.border-pink-darkest {\n  border-color: #451225;\n}\n\n.border-pink-darker {\n  border-color: #6f213f;\n}\n\n.border-pink-dark {\n  border-color: #eb5286;\n}\n\n.border-pink {\n  border-color: #f66d9b;\n}\n\n.border-pink-light {\n  border-color: #fa7ea8;\n}\n\n.border-pink-lighter {\n  border-color: #ffbbca;\n}\n\n.border-pink-lightest {\n  border-color: #ffebef;\n}\n\n.rounded-none {\n  border-radius: 0;\n}\n\n.rounded-sm {\n  border-radius: .125rem;\n}\n\n.rounded {\n  border-radius: .25rem;\n}\n\n.rounded-lg {\n  border-radius: .5rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.rounded-t-none {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.rounded-r-none {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.rounded-b-none {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.rounded-l-none {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.rounded-t-sm {\n  border-top-left-radius: .125rem;\n  border-top-right-radius: .125rem;\n}\n\n.rounded-r-sm {\n  border-top-right-radius: .125rem;\n  border-bottom-right-radius: .125rem;\n}\n\n.rounded-b-sm {\n  border-bottom-right-radius: .125rem;\n  border-bottom-left-radius: .125rem;\n}\n\n.rounded-l-sm {\n  border-top-left-radius: .125rem;\n  border-bottom-left-radius: .125rem;\n}\n\n.rounded-t {\n  border-top-left-radius: .25rem;\n  border-top-right-radius: .25rem;\n}\n\n.rounded-r {\n  border-top-right-radius: .25rem;\n  border-bottom-right-radius: .25rem;\n}\n\n.rounded-b {\n  border-bottom-right-radius: .25rem;\n  border-bottom-left-radius: .25rem;\n}\n\n.rounded-l {\n  border-top-left-radius: .25rem;\n  border-bottom-left-radius: .25rem;\n}\n\n.rounded-t-lg {\n  border-top-left-radius: .5rem;\n  border-top-right-radius: .5rem;\n}\n\n.rounded-r-lg {\n  border-top-right-radius: .5rem;\n  border-bottom-right-radius: .5rem;\n}\n\n.rounded-b-lg {\n  border-bottom-right-radius: .5rem;\n  border-bottom-left-radius: .5rem;\n}\n\n.rounded-l-lg {\n  border-top-left-radius: .5rem;\n  border-bottom-left-radius: .5rem;\n}\n\n.rounded-t-full {\n  border-top-left-radius: 9999px;\n  border-top-right-radius: 9999px;\n}\n\n.rounded-r-full {\n  border-top-right-radius: 9999px;\n  border-bottom-right-radius: 9999px;\n}\n\n.rounded-b-full {\n  border-bottom-right-radius: 9999px;\n  border-bottom-left-radius: 9999px;\n}\n\n.rounded-l-full {\n  border-top-left-radius: 9999px;\n  border-bottom-left-radius: 9999px;\n}\n\n.rounded-tl-none {\n  border-top-left-radius: 0;\n}\n\n.rounded-tr-none {\n  border-top-right-radius: 0;\n}\n\n.rounded-br-none {\n  border-bottom-right-radius: 0;\n}\n\n.rounded-bl-none {\n  border-bottom-left-radius: 0;\n}\n\n.rounded-tl-sm {\n  border-top-left-radius: .125rem;\n}\n\n.rounded-tr-sm {\n  border-top-right-radius: .125rem;\n}\n\n.rounded-br-sm {\n  border-bottom-right-radius: .125rem;\n}\n\n.rounded-bl-sm {\n  border-bottom-left-radius: .125rem;\n}\n\n.rounded-tl {\n  border-top-left-radius: .25rem;\n}\n\n.rounded-tr {\n  border-top-right-radius: .25rem;\n}\n\n.rounded-br {\n  border-bottom-right-radius: .25rem;\n}\n\n.rounded-bl {\n  border-bottom-left-radius: .25rem;\n}\n\n.rounded-tl-lg {\n  border-top-left-radius: .5rem;\n}\n\n.rounded-tr-lg {\n  border-top-right-radius: .5rem;\n}\n\n.rounded-br-lg {\n  border-bottom-right-radius: .5rem;\n}\n\n.rounded-bl-lg {\n  border-bottom-left-radius: .5rem;\n}\n\n.rounded-tl-full {\n  border-top-left-radius: 9999px;\n}\n\n.rounded-tr-full {\n  border-top-right-radius: 9999px;\n}\n\n.rounded-br-full {\n  border-bottom-right-radius: 9999px;\n}\n\n.rounded-bl-full {\n  border-bottom-left-radius: 9999px;\n}\n\n.border-solid {\n  border-style: solid;\n}\n\n.border-dashed {\n  border-style: dashed;\n}\n\n.border-dotted {\n  border-style: dotted;\n}\n\n.border-none {\n  border-style: none;\n}\n\n.border-0 {\n  border-width: 0;\n}\n\n.border-2 {\n  border-width: 2px;\n}\n\n.border-4 {\n  border-width: 4px;\n}\n\n.border-8 {\n  border-width: 8px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-t-0 {\n  border-top-width: 0;\n}\n\n.border-r-0 {\n  border-right-width: 0;\n}\n\n.border-b-0 {\n  border-bottom-width: 0;\n}\n\n.border-l-0 {\n  border-left-width: 0;\n}\n\n.border-t-2 {\n  border-top-width: 2px;\n}\n\n.border-r-2 {\n  border-right-width: 2px;\n}\n\n.border-b-2 {\n  border-bottom-width: 2px;\n}\n\n.border-l-2 {\n  border-left-width: 2px;\n}\n\n.border-t-4 {\n  border-top-width: 4px;\n}\n\n.border-r-4 {\n  border-right-width: 4px;\n}\n\n.border-b-4 {\n  border-bottom-width: 4px;\n}\n\n.border-l-4 {\n  border-left-width: 4px;\n}\n\n.border-t-8 {\n  border-top-width: 8px;\n}\n\n.border-r-8 {\n  border-right-width: 8px;\n}\n\n.border-b-8 {\n  border-bottom-width: 8px;\n}\n\n.border-l-8 {\n  border-left-width: 8px;\n}\n\n.border-t {\n  border-top-width: 1px;\n}\n\n.border-r {\n  border-right-width: 1px;\n}\n\n.border-b {\n  border-bottom-width: 1px;\n}\n\n.border-l {\n  border-left-width: 1px;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n\n.cursor-default {\n  cursor: default;\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-wait {\n  cursor: wait;\n}\n\n.cursor-move {\n  cursor: move;\n}\n\n.cursor-not-allowed {\n  cursor: not-allowed;\n}\n\n.block {\n  display: block;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.inline {\n  display: inline;\n}\n\n.table {\n  display: table;\n}\n\n.table-row {\n  display: table-row;\n}\n\n.table-cell {\n  display: table-cell;\n}\n\n.hidden {\n  display: none;\n}\n\n.flex {\n  display: flex;\n}\n\n.inline-flex {\n  display: inline-flex;\n}\n\n.flex-row {\n  flex-direction: row;\n}\n\n.flex-row-reverse {\n  flex-direction: row-reverse;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.flex-col-reverse {\n  flex-direction: column-reverse;\n}\n\n.flex-wrap {\n  flex-wrap: wrap;\n}\n\n.flex-wrap-reverse {\n  flex-wrap: wrap-reverse;\n}\n\n.flex-no-wrap {\n  flex-wrap: nowrap;\n}\n\n.items-start {\n  align-items: flex-start;\n}\n\n.items-end {\n  align-items: flex-end;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.items-baseline {\n  align-items: baseline;\n}\n\n.items-stretch {\n  align-items: stretch;\n}\n\n.self-auto {\n  align-self: auto;\n}\n\n.self-start {\n  align-self: flex-start;\n}\n\n.self-end {\n  align-self: flex-end;\n}\n\n.self-center {\n  align-self: center;\n}\n\n.self-stretch {\n  align-self: stretch;\n}\n\n.justify-start {\n  justify-content: flex-start;\n}\n\n.justify-end {\n  justify-content: flex-end;\n}\n\n.justify-center {\n  justify-content: center;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.justify-around {\n  justify-content: space-around;\n}\n\n.content-center {\n  align-content: center;\n}\n\n.content-start {\n  align-content: flex-start;\n}\n\n.content-end {\n  align-content: flex-end;\n}\n\n.content-between {\n  align-content: space-between;\n}\n\n.content-around {\n  align-content: space-around;\n}\n\n.flex-1 {\n  flex: 1 1 0%;\n}\n\n.flex-auto {\n  flex: 1 1 auto;\n}\n\n.flex-initial {\n  flex: 0 1 auto;\n}\n\n.flex-none {\n  flex: none;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n.flex-shrink {\n  flex-shrink: 1;\n}\n\n.flex-no-grow {\n  flex-grow: 0;\n}\n\n.flex-no-shrink {\n  flex-shrink: 0;\n}\n\n.float-right {\n  float: right;\n}\n\n.float-left {\n  float: left;\n}\n\n.float-none {\n  float: none;\n}\n\n.font-hairline {\n  font-weight: 100;\n}\n\n.font-thin {\n  font-weight: 200;\n}\n\n.font-light {\n  font-weight: 300;\n}\n\n.font-normal {\n  font-weight: 400;\n}\n\n.font-medium {\n  font-weight: 500;\n}\n\n.font-semibold {\n  font-weight: 600;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.font-extrabold {\n  font-weight: 800;\n}\n\n.font-black {\n  font-weight: 900;\n}\n\n.h-1 {\n  height: .25rem;\n}\n\n.h-2 {\n  height: .5rem;\n}\n\n.h-3 {\n  height: .75rem;\n}\n\n.h-4 {\n  height: 1rem;\n}\n\n.h-5 {\n  height: 1.25rem;\n}\n\n.h-6 {\n  height: 1.5rem;\n}\n\n.h-8 {\n  height: 2rem;\n}\n\n.h-10 {\n  height: 2.5rem;\n}\n\n.h-12 {\n  height: 3rem;\n}\n\n.h-16 {\n  height: 4rem;\n}\n\n.h-24 {\n  height: 6rem;\n}\n\n.h-32 {\n  height: 8rem;\n}\n\n.h-48 {\n  height: 12rem;\n}\n\n.h-64 {\n  height: 16rem;\n}\n\n.h-auto {\n  height: auto;\n}\n\n.h-px {\n  height: 1px;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.h-screen {\n  height: 100vh;\n}\n\n.leading-none {\n  line-height: 1;\n}\n\n.leading-tight {\n  line-height: 1.25;\n}\n\n.leading-normal {\n  line-height: 1.5;\n}\n\n.leading-loose {\n  line-height: 2;\n}\n\n.m-0 {\n  margin: 0;\n}\n\n.m-1 {\n  margin: .25rem;\n}\n\n.m-2 {\n  margin: .5rem;\n}\n\n.m-3 {\n  margin: .75rem;\n}\n\n.m-4 {\n  margin: 1rem;\n}\n\n.m-5 {\n  margin: 1.25rem;\n}\n\n.m-6 {\n  margin: 1.5rem;\n}\n\n.m-8 {\n  margin: 2rem;\n}\n\n.m-10 {\n  margin: 2.5rem;\n}\n\n.m-12 {\n  margin: 3rem;\n}\n\n.m-16 {\n  margin: 4rem;\n}\n\n.m-20 {\n  margin: 5rem;\n}\n\n.m-24 {\n  margin: 6rem;\n}\n\n.m-32 {\n  margin: 8rem;\n}\n\n.m-auto {\n  margin: auto;\n}\n\n.m-px {\n  margin: 1px;\n}\n\n.my-0 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.mx-0 {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.my-1 {\n  margin-top: .25rem;\n  margin-bottom: .25rem;\n}\n\n.mx-1 {\n  margin-left: .25rem;\n  margin-right: .25rem;\n}\n\n.my-2 {\n  margin-top: .5rem;\n  margin-bottom: .5rem;\n}\n\n.mx-2 {\n  margin-left: .5rem;\n  margin-right: .5rem;\n}\n\n.my-3 {\n  margin-top: .75rem;\n  margin-bottom: .75rem;\n}\n\n.mx-3 {\n  margin-left: .75rem;\n  margin-right: .75rem;\n}\n\n.my-4 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mx-4 {\n  margin-left: 1rem;\n  margin-right: 1rem;\n}\n\n.my-5 {\n  margin-top: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n\n.mx-5 {\n  margin-left: 1.25rem;\n  margin-right: 1.25rem;\n}\n\n.my-6 {\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.mx-6 {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n}\n\n.my-8 {\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n}\n\n.mx-8 {\n  margin-left: 2rem;\n  margin-right: 2rem;\n}\n\n.my-10 {\n  margin-top: 2.5rem;\n  margin-bottom: 2.5rem;\n}\n\n.mx-10 {\n  margin-left: 2.5rem;\n  margin-right: 2.5rem;\n}\n\n.my-12 {\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n}\n\n.mx-12 {\n  margin-left: 3rem;\n  margin-right: 3rem;\n}\n\n.my-16 {\n  margin-top: 4rem;\n  margin-bottom: 4rem;\n}\n\n.mx-16 {\n  margin-left: 4rem;\n  margin-right: 4rem;\n}\n\n.my-20 {\n  margin-top: 5rem;\n  margin-bottom: 5rem;\n}\n\n.mx-20 {\n  margin-left: 5rem;\n  margin-right: 5rem;\n}\n\n.my-24 {\n  margin-top: 6rem;\n  margin-bottom: 6rem;\n}\n\n.mx-24 {\n  margin-left: 6rem;\n  margin-right: 6rem;\n}\n\n.my-32 {\n  margin-top: 8rem;\n  margin-bottom: 8rem;\n}\n\n.mx-32 {\n  margin-left: 8rem;\n  margin-right: 8rem;\n}\n\n.my-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.my-px {\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\n\n.mx-px {\n  margin-left: 1px;\n  margin-right: 1px;\n}\n\n.mt-0 {\n  margin-top: 0;\n}\n\n.mr-0 {\n  margin-right: 0;\n}\n\n.mb-0 {\n  margin-bottom: 0;\n}\n\n.ml-0 {\n  margin-left: 0;\n}\n\n.mt-1 {\n  margin-top: .25rem;\n}\n\n.mr-1 {\n  margin-right: .25rem;\n}\n\n.mb-1 {\n  margin-bottom: .25rem;\n}\n\n.ml-1 {\n  margin-left: .25rem;\n}\n\n.mt-2 {\n  margin-top: .5rem;\n}\n\n.mr-2 {\n  margin-right: .5rem;\n}\n\n.mb-2 {\n  margin-bottom: .5rem;\n}\n\n.ml-2 {\n  margin-left: .5rem;\n}\n\n.mt-3 {\n  margin-top: .75rem;\n}\n\n.mr-3 {\n  margin-right: .75rem;\n}\n\n.mb-3 {\n  margin-bottom: .75rem;\n}\n\n.ml-3 {\n  margin-left: .75rem;\n}\n\n.mt-4 {\n  margin-top: 1rem;\n}\n\n.mr-4 {\n  margin-right: 1rem;\n}\n\n.mb-4 {\n  margin-bottom: 1rem;\n}\n\n.ml-4 {\n  margin-left: 1rem;\n}\n\n.mt-5 {\n  margin-top: 1.25rem;\n}\n\n.mr-5 {\n  margin-right: 1.25rem;\n}\n\n.mb-5 {\n  margin-bottom: 1.25rem;\n}\n\n.ml-5 {\n  margin-left: 1.25rem;\n}\n\n.mt-6 {\n  margin-top: 1.5rem;\n}\n\n.mr-6 {\n  margin-right: 1.5rem;\n}\n\n.mb-6 {\n  margin-bottom: 1.5rem;\n}\n\n.ml-6 {\n  margin-left: 1.5rem;\n}\n\n.mt-8 {\n  margin-top: 2rem;\n}\n\n.mr-8 {\n  margin-right: 2rem;\n}\n\n.mb-8 {\n  margin-bottom: 2rem;\n}\n\n.ml-8 {\n  margin-left: 2rem;\n}\n\n.mt-10 {\n  margin-top: 2.5rem;\n}\n\n.mr-10 {\n  margin-right: 2.5rem;\n}\n\n.mb-10 {\n  margin-bottom: 2.5rem;\n}\n\n.ml-10 {\n  margin-left: 2.5rem;\n}\n\n.mt-12 {\n  margin-top: 3rem;\n}\n\n.mr-12 {\n  margin-right: 3rem;\n}\n\n.mb-12 {\n  margin-bottom: 3rem;\n}\n\n.ml-12 {\n  margin-left: 3rem;\n}\n\n.mt-16 {\n  margin-top: 4rem;\n}\n\n.mr-16 {\n  margin-right: 4rem;\n}\n\n.mb-16 {\n  margin-bottom: 4rem;\n}\n\n.ml-16 {\n  margin-left: 4rem;\n}\n\n.mt-20 {\n  margin-top: 5rem;\n}\n\n.mr-20 {\n  margin-right: 5rem;\n}\n\n.mb-20 {\n  margin-bottom: 5rem;\n}\n\n.ml-20 {\n  margin-left: 5rem;\n}\n\n.mt-24 {\n  margin-top: 6rem;\n}\n\n.mr-24 {\n  margin-right: 6rem;\n}\n\n.mb-24 {\n  margin-bottom: 6rem;\n}\n\n.ml-24 {\n  margin-left: 6rem;\n}\n\n.mt-32 {\n  margin-top: 8rem;\n}\n\n.mr-32 {\n  margin-right: 8rem;\n}\n\n.mb-32 {\n  margin-bottom: 8rem;\n}\n\n.ml-32 {\n  margin-left: 8rem;\n}\n\n.mt-auto {\n  margin-top: auto;\n}\n\n.mr-auto {\n  margin-right: auto;\n}\n\n.mb-auto {\n  margin-bottom: auto;\n}\n\n.ml-auto {\n  margin-left: auto;\n}\n\n.mt-px {\n  margin-top: 1px;\n}\n\n.mr-px {\n  margin-right: 1px;\n}\n\n.mb-px {\n  margin-bottom: 1px;\n}\n\n.ml-px {\n  margin-left: 1px;\n}\n\n.max-h-full {\n  max-height: 100%;\n}\n\n.max-h-screen {\n  max-height: 100vh;\n}\n\n.max-w-xs {\n  max-width: 20rem;\n}\n\n.max-w-sm {\n  max-width: 30rem;\n}\n\n.max-w-md {\n  max-width: 40rem;\n}\n\n.max-w-lg {\n  max-width: 50rem;\n}\n\n.max-w-xl {\n  max-width: 60rem;\n}\n\n.max-w-2xl {\n  max-width: 70rem;\n}\n\n.max-w-3xl {\n  max-width: 80rem;\n}\n\n.max-w-4xl {\n  max-width: 90rem;\n}\n\n.max-w-5xl {\n  max-width: 100rem;\n}\n\n.max-w-full {\n  max-width: 100%;\n}\n\n.min-h-0 {\n  min-height: 0;\n}\n\n.min-h-full {\n  min-height: 100%;\n}\n\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.min-w-0 {\n  min-width: 0;\n}\n\n.min-w-full {\n  min-width: 100%;\n}\n\n.-m-0 {\n  margin: 0;\n}\n\n.-m-1 {\n  margin: -0.25rem;\n}\n\n.-m-2 {\n  margin: -0.5rem;\n}\n\n.-m-3 {\n  margin: -0.75rem;\n}\n\n.-m-4 {\n  margin: -1rem;\n}\n\n.-m-5 {\n  margin: -1.25rem;\n}\n\n.-m-6 {\n  margin: -1.5rem;\n}\n\n.-m-8 {\n  margin: -2rem;\n}\n\n.-m-10 {\n  margin: -2.5rem;\n}\n\n.-m-12 {\n  margin: -3rem;\n}\n\n.-m-16 {\n  margin: -4rem;\n}\n\n.-m-20 {\n  margin: -5rem;\n}\n\n.-m-24 {\n  margin: -6rem;\n}\n\n.-m-32 {\n  margin: -8rem;\n}\n\n.-m-px {\n  margin: -1px;\n}\n\n.-my-0 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.-mx-0 {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.-my-1 {\n  margin-top: -0.25rem;\n  margin-bottom: -0.25rem;\n}\n\n.-mx-1 {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.-my-2 {\n  margin-top: -0.5rem;\n  margin-bottom: -0.5rem;\n}\n\n.-mx-2 {\n  margin-left: -0.5rem;\n  margin-right: -0.5rem;\n}\n\n.-my-3 {\n  margin-top: -0.75rem;\n  margin-bottom: -0.75rem;\n}\n\n.-mx-3 {\n  margin-left: -0.75rem;\n  margin-right: -0.75rem;\n}\n\n.-my-4 {\n  margin-top: -1rem;\n  margin-bottom: -1rem;\n}\n\n.-mx-4 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n}\n\n.-my-5 {\n  margin-top: -1.25rem;\n  margin-bottom: -1.25rem;\n}\n\n.-mx-5 {\n  margin-left: -1.25rem;\n  margin-right: -1.25rem;\n}\n\n.-my-6 {\n  margin-top: -1.5rem;\n  margin-bottom: -1.5rem;\n}\n\n.-mx-6 {\n  margin-left: -1.5rem;\n  margin-right: -1.5rem;\n}\n\n.-my-8 {\n  margin-top: -2rem;\n  margin-bottom: -2rem;\n}\n\n.-mx-8 {\n  margin-left: -2rem;\n  margin-right: -2rem;\n}\n\n.-my-10 {\n  margin-top: -2.5rem;\n  margin-bottom: -2.5rem;\n}\n\n.-mx-10 {\n  margin-left: -2.5rem;\n  margin-right: -2.5rem;\n}\n\n.-my-12 {\n  margin-top: -3rem;\n  margin-bottom: -3rem;\n}\n\n.-mx-12 {\n  margin-left: -3rem;\n  margin-right: -3rem;\n}\n\n.-my-16 {\n  margin-top: -4rem;\n  margin-bottom: -4rem;\n}\n\n.-mx-16 {\n  margin-left: -4rem;\n  margin-right: -4rem;\n}\n\n.-my-20 {\n  margin-top: -5rem;\n  margin-bottom: -5rem;\n}\n\n.-mx-20 {\n  margin-left: -5rem;\n  margin-right: -5rem;\n}\n\n.-my-24 {\n  margin-top: -6rem;\n  margin-bottom: -6rem;\n}\n\n.-mx-24 {\n  margin-left: -6rem;\n  margin-right: -6rem;\n}\n\n.-my-32 {\n  margin-top: -8rem;\n  margin-bottom: -8rem;\n}\n\n.-mx-32 {\n  margin-left: -8rem;\n  margin-right: -8rem;\n}\n\n.-my-px {\n  margin-top: -1px;\n  margin-bottom: -1px;\n}\n\n.-mx-px {\n  margin-left: -1px;\n  margin-right: -1px;\n}\n\n.-mt-0 {\n  margin-top: 0;\n}\n\n.-mr-0 {\n  margin-right: 0;\n}\n\n.-mb-0 {\n  margin-bottom: 0;\n}\n\n.-ml-0 {\n  margin-left: 0;\n}\n\n.-mt-1 {\n  margin-top: -0.25rem;\n}\n\n.-mr-1 {\n  margin-right: -0.25rem;\n}\n\n.-mb-1 {\n  margin-bottom: -0.25rem;\n}\n\n.-ml-1 {\n  margin-left: -0.25rem;\n}\n\n.-mt-2 {\n  margin-top: -0.5rem;\n}\n\n.-mr-2 {\n  margin-right: -0.5rem;\n}\n\n.-mb-2 {\n  margin-bottom: -0.5rem;\n}\n\n.-ml-2 {\n  margin-left: -0.5rem;\n}\n\n.-mt-3 {\n  margin-top: -0.75rem;\n}\n\n.-mr-3 {\n  margin-right: -0.75rem;\n}\n\n.-mb-3 {\n  margin-bottom: -0.75rem;\n}\n\n.-ml-3 {\n  margin-left: -0.75rem;\n}\n\n.-mt-4 {\n  margin-top: -1rem;\n}\n\n.-mr-4 {\n  margin-right: -1rem;\n}\n\n.-mb-4 {\n  margin-bottom: -1rem;\n}\n\n.-ml-4 {\n  margin-left: -1rem;\n}\n\n.-mt-5 {\n  margin-top: -1.25rem;\n}\n\n.-mr-5 {\n  margin-right: -1.25rem;\n}\n\n.-mb-5 {\n  margin-bottom: -1.25rem;\n}\n\n.-ml-5 {\n  margin-left: -1.25rem;\n}\n\n.-mt-6 {\n  margin-top: -1.5rem;\n}\n\n.-mr-6 {\n  margin-right: -1.5rem;\n}\n\n.-mb-6 {\n  margin-bottom: -1.5rem;\n}\n\n.-ml-6 {\n  margin-left: -1.5rem;\n}\n\n.-mt-8 {\n  margin-top: -2rem;\n}\n\n.-mr-8 {\n  margin-right: -2rem;\n}\n\n.-mb-8 {\n  margin-bottom: -2rem;\n}\n\n.-ml-8 {\n  margin-left: -2rem;\n}\n\n.-mt-10 {\n  margin-top: -2.5rem;\n}\n\n.-mr-10 {\n  margin-right: -2.5rem;\n}\n\n.-mb-10 {\n  margin-bottom: -2.5rem;\n}\n\n.-ml-10 {\n  margin-left: -2.5rem;\n}\n\n.-mt-12 {\n  margin-top: -3rem;\n}\n\n.-mr-12 {\n  margin-right: -3rem;\n}\n\n.-mb-12 {\n  margin-bottom: -3rem;\n}\n\n.-ml-12 {\n  margin-left: -3rem;\n}\n\n.-mt-16 {\n  margin-top: -4rem;\n}\n\n.-mr-16 {\n  margin-right: -4rem;\n}\n\n.-mb-16 {\n  margin-bottom: -4rem;\n}\n\n.-ml-16 {\n  margin-left: -4rem;\n}\n\n.-mt-20 {\n  margin-top: -5rem;\n}\n\n.-mr-20 {\n  margin-right: -5rem;\n}\n\n.-mb-20 {\n  margin-bottom: -5rem;\n}\n\n.-ml-20 {\n  margin-left: -5rem;\n}\n\n.-mt-24 {\n  margin-top: -6rem;\n}\n\n.-mr-24 {\n  margin-right: -6rem;\n}\n\n.-mb-24 {\n  margin-bottom: -6rem;\n}\n\n.-ml-24 {\n  margin-left: -6rem;\n}\n\n.-mt-32 {\n  margin-top: -8rem;\n}\n\n.-mr-32 {\n  margin-right: -8rem;\n}\n\n.-mb-32 {\n  margin-bottom: -8rem;\n}\n\n.-ml-32 {\n  margin-left: -8rem;\n}\n\n.-mt-px {\n  margin-top: -1px;\n}\n\n.-mr-px {\n  margin-right: -1px;\n}\n\n.-mb-px {\n  margin-bottom: -1px;\n}\n\n.-ml-px {\n  margin-left: -1px;\n}\n\n.opacity-0 {\n  opacity: 0;\n}\n\n.opacity-25 {\n  opacity: .25;\n}\n\n.opacity-50 {\n  opacity: .5;\n}\n\n.opacity-75 {\n  opacity: .75;\n}\n\n.opacity-100 {\n  opacity: 1;\n}\n\n.outline-none {\n  outline: 0;\n}\n\n.overflow-auto {\n  overflow: auto;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.overflow-visible {\n  overflow: visible;\n}\n\n.overflow-scroll {\n  overflow: scroll;\n}\n\n.overflow-x-auto {\n  overflow-x: auto;\n}\n\n.overflow-y-auto {\n  overflow-y: auto;\n}\n\n.overflow-x-hidden {\n  overflow-x: hidden;\n}\n\n.overflow-y-hidden {\n  overflow-y: hidden;\n}\n\n.overflow-x-visible {\n  overflow-x: visible;\n}\n\n.overflow-y-visible {\n  overflow-y: visible;\n}\n\n.overflow-x-scroll {\n  overflow-x: scroll;\n}\n\n.overflow-y-scroll {\n  overflow-y: scroll;\n}\n\n.scrolling-touch {\n  -webkit-overflow-scrolling: touch;\n}\n\n.scrolling-auto {\n  -webkit-overflow-scrolling: auto;\n}\n\n.p-0 {\n  padding: 0;\n}\n\n.p-1 {\n  padding: .25rem;\n}\n\n.p-2 {\n  padding: .5rem;\n}\n\n.p-3 {\n  padding: .75rem;\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.p-5 {\n  padding: 1.25rem;\n}\n\n.p-6 {\n  padding: 1.5rem;\n}\n\n.p-8 {\n  padding: 2rem;\n}\n\n.p-10 {\n  padding: 2.5rem;\n}\n\n.p-12 {\n  padding: 3rem;\n}\n\n.p-16 {\n  padding: 4rem;\n}\n\n.p-20 {\n  padding: 5rem;\n}\n\n.p-24 {\n  padding: 6rem;\n}\n\n.p-32 {\n  padding: 8rem;\n}\n\n.p-px {\n  padding: 1px;\n}\n\n.py-0 {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.px-0 {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.py-1 {\n  padding-top: .25rem;\n  padding-bottom: .25rem;\n}\n\n.px-1 {\n  padding-left: .25rem;\n  padding-right: .25rem;\n}\n\n.py-2 {\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n}\n\n.px-2 {\n  padding-left: .5rem;\n  padding-right: .5rem;\n}\n\n.py-3 {\n  padding-top: .75rem;\n  padding-bottom: .75rem;\n}\n\n.px-3 {\n  padding-left: .75rem;\n  padding-right: .75rem;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.py-5 {\n  padding-top: 1.25rem;\n  padding-bottom: 1.25rem;\n}\n\n.px-5 {\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n}\n\n.py-6 {\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n}\n\n.px-6 {\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n}\n\n.py-8 {\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n\n.px-8 {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\n.py-10 {\n  padding-top: 2.5rem;\n  padding-bottom: 2.5rem;\n}\n\n.px-10 {\n  padding-left: 2.5rem;\n  padding-right: 2.5rem;\n}\n\n.py-12 {\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n}\n\n.px-12 {\n  padding-left: 3rem;\n  padding-right: 3rem;\n}\n\n.py-16 {\n  padding-top: 4rem;\n  padding-bottom: 4rem;\n}\n\n.px-16 {\n  padding-left: 4rem;\n  padding-right: 4rem;\n}\n\n.py-20 {\n  padding-top: 5rem;\n  padding-bottom: 5rem;\n}\n\n.px-20 {\n  padding-left: 5rem;\n  padding-right: 5rem;\n}\n\n.py-24 {\n  padding-top: 6rem;\n  padding-bottom: 6rem;\n}\n\n.px-24 {\n  padding-left: 6rem;\n  padding-right: 6rem;\n}\n\n.py-32 {\n  padding-top: 8rem;\n  padding-bottom: 8rem;\n}\n\n.px-32 {\n  padding-left: 8rem;\n  padding-right: 8rem;\n}\n\n.py-px {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n\n.px-px {\n  padding-left: 1px;\n  padding-right: 1px;\n}\n\n.pt-0 {\n  padding-top: 0;\n}\n\n.pr-0 {\n  padding-right: 0;\n}\n\n.pb-0 {\n  padding-bottom: 0;\n}\n\n.pl-0 {\n  padding-left: 0;\n}\n\n.pt-1 {\n  padding-top: .25rem;\n}\n\n.pr-1 {\n  padding-right: .25rem;\n}\n\n.pb-1 {\n  padding-bottom: .25rem;\n}\n\n.pl-1 {\n  padding-left: .25rem;\n}\n\n.pt-2 {\n  padding-top: .5rem;\n}\n\n.pr-2 {\n  padding-right: .5rem;\n}\n\n.pb-2 {\n  padding-bottom: .5rem;\n}\n\n.pl-2 {\n  padding-left: .5rem;\n}\n\n.pt-3 {\n  padding-top: .75rem;\n}\n\n.pr-3 {\n  padding-right: .75rem;\n}\n\n.pb-3 {\n  padding-bottom: .75rem;\n}\n\n.pl-3 {\n  padding-left: .75rem;\n}\n\n.pt-4 {\n  padding-top: 1rem;\n}\n\n.pr-4 {\n  padding-right: 1rem;\n}\n\n.pb-4 {\n  padding-bottom: 1rem;\n}\n\n.pl-4 {\n  padding-left: 1rem;\n}\n\n.pt-5 {\n  padding-top: 1.25rem;\n}\n\n.pr-5 {\n  padding-right: 1.25rem;\n}\n\n.pb-5 {\n  padding-bottom: 1.25rem;\n}\n\n.pl-5 {\n  padding-left: 1.25rem;\n}\n\n.pt-6 {\n  padding-top: 1.5rem;\n}\n\n.pr-6 {\n  padding-right: 1.5rem;\n}\n\n.pb-6 {\n  padding-bottom: 1.5rem;\n}\n\n.pl-6 {\n  padding-left: 1.5rem;\n}\n\n.pt-8 {\n  padding-top: 2rem;\n}\n\n.pr-8 {\n  padding-right: 2rem;\n}\n\n.pb-8 {\n  padding-bottom: 2rem;\n}\n\n.pl-8 {\n  padding-left: 2rem;\n}\n\n.pt-10 {\n  padding-top: 2.5rem;\n}\n\n.pr-10 {\n  padding-right: 2.5rem;\n}\n\n.pb-10 {\n  padding-bottom: 2.5rem;\n}\n\n.pl-10 {\n  padding-left: 2.5rem;\n}\n\n.pt-12 {\n  padding-top: 3rem;\n}\n\n.pr-12 {\n  padding-right: 3rem;\n}\n\n.pb-12 {\n  padding-bottom: 3rem;\n}\n\n.pl-12 {\n  padding-left: 3rem;\n}\n\n.pt-16 {\n  padding-top: 4rem;\n}\n\n.pr-16 {\n  padding-right: 4rem;\n}\n\n.pb-16 {\n  padding-bottom: 4rem;\n}\n\n.pl-16 {\n  padding-left: 4rem;\n}\n\n.pt-20 {\n  padding-top: 5rem;\n}\n\n.pr-20 {\n  padding-right: 5rem;\n}\n\n.pb-20 {\n  padding-bottom: 5rem;\n}\n\n.pl-20 {\n  padding-left: 5rem;\n}\n\n.pt-24 {\n  padding-top: 6rem;\n}\n\n.pr-24 {\n  padding-right: 6rem;\n}\n\n.pb-24 {\n  padding-bottom: 6rem;\n}\n\n.pl-24 {\n  padding-left: 6rem;\n}\n\n.pt-32 {\n  padding-top: 8rem;\n}\n\n.pr-32 {\n  padding-right: 8rem;\n}\n\n.pb-32 {\n  padding-bottom: 8rem;\n}\n\n.pl-32 {\n  padding-left: 8rem;\n}\n\n.pt-px {\n  padding-top: 1px;\n}\n\n.pr-px {\n  padding-right: 1px;\n}\n\n.pb-px {\n  padding-bottom: 1px;\n}\n\n.pl-px {\n  padding-left: 1px;\n}\n\n.pointer-events-none {\n  pointer-events: none;\n}\n\n.pointer-events-auto {\n  pointer-events: auto;\n}\n\n.static {\n  position: static;\n}\n\n.fixed {\n  position: fixed;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n\n.pin-none {\n  top: auto;\n  right: auto;\n  bottom: auto;\n  left: auto;\n}\n\n.pin {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.pin-y {\n  top: 0;\n  bottom: 0;\n}\n\n.pin-x {\n  right: 0;\n  left: 0;\n}\n\n.pin-t {\n  top: 0;\n}\n\n.pin-r {\n  right: 0;\n}\n\n.pin-b {\n  bottom: 0;\n}\n\n.pin-l {\n  left: 0;\n}\n\n.resize-none {\n  resize: none;\n}\n\n.resize-y {\n  resize: vertical;\n}\n\n.resize-x {\n  resize: horizontal;\n}\n\n.resize {\n  resize: both;\n}\n\n.shadow {\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n}\n\n.shadow-md {\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n}\n\n.shadow-lg {\n  box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n}\n\n.shadow-inner {\n  box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n}\n\n.shadow-outline {\n  box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n}\n\n.shadow-none {\n  box-shadow: none;\n}\n\n.fill-current {\n  fill: currentColor;\n}\n\n.stroke-current {\n  stroke: currentColor;\n}\n\n.table-auto {\n  table-layout: auto;\n}\n\n.table-fixed {\n  table-layout: fixed;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-justify {\n  text-align: justify;\n}\n\n.text-transparent {\n  color: transparent;\n}\n\n.text-black {\n  color: #22292f;\n}\n\n.text-grey-darkest {\n  color: #3d4852;\n}\n\n.text-grey-darker {\n  color: #606f7b;\n}\n\n.text-grey-dark {\n  color: #8795a1;\n}\n\n.text-grey {\n  color: #b8c2cc;\n}\n\n.text-grey-light {\n  color: #dae1e7;\n}\n\n.text-grey-lighter {\n  color: #f1f5f8;\n}\n\n.text-grey-lightest {\n  color: #f8fafc;\n}\n\n.text-white {\n  color: #fff;\n}\n\n.text-red-darkest {\n  color: #3b0d0c;\n}\n\n.text-red-darker {\n  color: #621b18;\n}\n\n.text-red-dark {\n  color: #cc1f1a;\n}\n\n.text-red {\n  color: #e3342f;\n}\n\n.text-red-light {\n  color: #ef5753;\n}\n\n.text-red-lighter {\n  color: #f9acaa;\n}\n\n.text-red-lightest {\n  color: #fcebea;\n}\n\n.text-orange-darkest {\n  color: #462a16;\n}\n\n.text-orange-darker {\n  color: #613b1f;\n}\n\n.text-orange-dark {\n  color: #de751f;\n}\n\n.text-orange {\n  color: #f6993f;\n}\n\n.text-orange-light {\n  color: #faad63;\n}\n\n.text-orange-lighter {\n  color: #fcd9b6;\n}\n\n.text-orange-lightest {\n  color: #fff5eb;\n}\n\n.text-yellow-darkest {\n  color: #453411;\n}\n\n.text-yellow-darker {\n  color: #684f1d;\n}\n\n.text-yellow-dark {\n  color: #f2d024;\n}\n\n.text-yellow {\n  color: #ffed4a;\n}\n\n.text-yellow-light {\n  color: #fff382;\n}\n\n.text-yellow-lighter {\n  color: #fff9c2;\n}\n\n.text-yellow-lightest {\n  color: #fcfbeb;\n}\n\n.text-green-darkest {\n  color: #0f2f21;\n}\n\n.text-green-darker {\n  color: #1a4731;\n}\n\n.text-green-dark {\n  color: #1f9d55;\n}\n\n.text-green {\n  color: #38c172;\n}\n\n.text-green-light {\n  color: #51d88a;\n}\n\n.text-green-lighter {\n  color: #a2f5bf;\n}\n\n.text-green-lightest {\n  color: #e3fcec;\n}\n\n.text-teal-darkest {\n  color: #0d3331;\n}\n\n.text-teal-darker {\n  color: #20504f;\n}\n\n.text-teal-dark {\n  color: #38a89d;\n}\n\n.text-teal {\n  color: #4dc0b5;\n}\n\n.text-teal-light {\n  color: #64d5ca;\n}\n\n.text-teal-lighter {\n  color: #a0f0ed;\n}\n\n.text-teal-lightest {\n  color: #e8fffe;\n}\n\n.text-blue-darkest {\n  color: #12283a;\n}\n\n.text-blue-darker {\n  color: #1c3d5a;\n}\n\n.text-blue-dark {\n  color: #2779bd;\n}\n\n.text-blue {\n  color: #3490dc;\n}\n\n.text-blue-light {\n  color: #6cb2eb;\n}\n\n.text-blue-lighter {\n  color: #bcdefa;\n}\n\n.text-blue-lightest {\n  color: #eff8ff;\n}\n\n.text-indigo-darkest {\n  color: #191e38;\n}\n\n.text-indigo-darker {\n  color: #2f365f;\n}\n\n.text-indigo-dark {\n  color: #5661b3;\n}\n\n.text-indigo {\n  color: #6574cd;\n}\n\n.text-indigo-light {\n  color: #7886d7;\n}\n\n.text-indigo-lighter {\n  color: #b2b7ff;\n}\n\n.text-indigo-lightest {\n  color: #e6e8ff;\n}\n\n.text-purple-darkest {\n  color: #21183c;\n}\n\n.text-purple-darker {\n  color: #382b5f;\n}\n\n.text-purple-dark {\n  color: #794acf;\n}\n\n.text-purple {\n  color: #9561e2;\n}\n\n.text-purple-light {\n  color: #a779e9;\n}\n\n.text-purple-lighter {\n  color: #d6bbfc;\n}\n\n.text-purple-lightest {\n  color: #f3ebff;\n}\n\n.text-pink-darkest {\n  color: #451225;\n}\n\n.text-pink-darker {\n  color: #6f213f;\n}\n\n.text-pink-dark {\n  color: #eb5286;\n}\n\n.text-pink {\n  color: #f66d9b;\n}\n\n.text-pink-light {\n  color: #fa7ea8;\n}\n\n.text-pink-lighter {\n  color: #ffbbca;\n}\n\n.text-pink-lightest {\n  color: #ffebef;\n}\n\n.text-xs {\n  font-size: .75rem;\n}\n\n.text-sm {\n  font-size: .875rem;\n}\n\n.text-base {\n  font-size: 1rem;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n}\n\n.text-xl {\n  font-size: 1.25rem;\n}\n\n.text-2xl {\n  font-size: 1.5rem;\n}\n\n.text-3xl {\n  font-size: 1.875rem;\n}\n\n.text-4xl {\n  font-size: 2.25rem;\n}\n\n.text-5xl {\n  font-size: 3rem;\n}\n\n.italic {\n  font-style: italic;\n}\n\n.roman {\n  font-style: normal;\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.lowercase {\n  text-transform: lowercase;\n}\n\n.capitalize {\n  text-transform: capitalize;\n}\n\n.normal-case {\n  text-transform: none;\n}\n\n.underline {\n  text-decoration: underline;\n}\n\n.line-through {\n  text-decoration: line-through;\n}\n\n.no-underline {\n  text-decoration: none;\n}\n\n.antialiased {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.subpixel-antialiased {\n  -webkit-font-smoothing: auto;\n  -moz-osx-font-smoothing: auto;\n}\n\n.tracking-tight {\n  letter-spacing: -0.05em;\n}\n\n.tracking-normal {\n  letter-spacing: 0;\n}\n\n.tracking-wide {\n  letter-spacing: .05em;\n}\n\n.select-none {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n.select-text {\n  -webkit-user-select: text;\n     -moz-user-select: text;\n      -ms-user-select: text;\n          user-select: text;\n}\n\n.align-baseline {\n  vertical-align: baseline;\n}\n\n.align-top {\n  vertical-align: top;\n}\n\n.align-middle {\n  vertical-align: middle;\n}\n\n.align-bottom {\n  vertical-align: bottom;\n}\n\n.align-text-top {\n  vertical-align: text-top;\n}\n\n.align-text-bottom {\n  vertical-align: text-bottom;\n}\n\n.visible {\n  visibility: visible;\n}\n\n.invisible {\n  visibility: hidden;\n}\n\n.whitespace-normal {\n  white-space: normal;\n}\n\n.whitespace-no-wrap {\n  white-space: nowrap;\n}\n\n.whitespace-pre {\n  white-space: pre;\n}\n\n.whitespace-pre-line {\n  white-space: pre-line;\n}\n\n.whitespace-pre-wrap {\n  white-space: pre-wrap;\n}\n\n.break-words {\n  word-wrap: break-word;\n}\n\n.break-normal {\n  word-wrap: normal;\n}\n\n.truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.w-1 {\n  width: .25rem;\n}\n\n.w-2 {\n  width: .5rem;\n}\n\n.w-3 {\n  width: .75rem;\n}\n\n.w-4 {\n  width: 1rem;\n}\n\n.w-5 {\n  width: 1.25rem;\n}\n\n.w-6 {\n  width: 1.5rem;\n}\n\n.w-8 {\n  width: 2rem;\n}\n\n.w-10 {\n  width: 2.5rem;\n}\n\n.w-12 {\n  width: 3rem;\n}\n\n.w-16 {\n  width: 4rem;\n}\n\n.w-24 {\n  width: 6rem;\n}\n\n.w-32 {\n  width: 8rem;\n}\n\n.w-48 {\n  width: 12rem;\n}\n\n.w-64 {\n  width: 16rem;\n}\n\n.w-auto {\n  width: auto;\n}\n\n.w-px {\n  width: 1px;\n}\n\n.w-2\\/3 {\n  width: 66.66667%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.w-screen {\n  width: 100vw;\n}\n\n.z-0 {\n  z-index: 0;\n}\n\n.z-10 {\n  z-index: 10;\n}\n\n.z-20 {\n  z-index: 20;\n}\n\n.z-30 {\n  z-index: 30;\n}\n\n.z-40 {\n  z-index: 40;\n}\n\n.z-50 {\n  z-index: 50;\n}\n\n.z-auto {\n  z-index: auto;\n}",".flag-icon-background {\n  background-size: contain;\n  background-position: 50%;\n  background-repeat: no-repeat;\n}\n\n.flag-icon {\n  @extend .flag-icon-background;\n  position: relative;\n  display: inline-block;\n  width: (4 / 3) * 1em;\n  line-height: 1em;\n  &:before {\n    content: '\\00a0';\n  }\n  &.flag-icon-squared {\n    width: 1em;\n  }\n}\n\n@mixin flag-icon($country) {\n  .flag-icon-#{$country} {\n    background-image: url(#{$flag-icon-css-path}#{$flag-icon-rect-path}/#{$country}.svg);\n    &.flag-icon-squared {\n      background-image: url(#{$flag-icon-css-path}#{$flag-icon-square-path}/#{$country}.svg);\n    }\n  }\n}\n"],"sourceRoot":""}